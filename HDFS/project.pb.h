// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: project.proto

#ifndef PROTOBUF_project_2eproto__INCLUDED
#define PROTOBUF_project_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_project_2eproto();
void protobuf_AssignDesc_project_2eproto();
void protobuf_ShutdownFile_project_2eproto();

class BlockReportRequest;
class BlockReportResponse;
class HeartBeatRequest;
class HeartBeatResponse;
class WriteBlockRequest;
class WriteBlockResponse;
class CloseFileRequest;
class CloseFileResponse;
class DataNodeLocation;
class BlockLocations;
class BlockLocationRequest;
class BlockLocationResponse;
class AssignBlockRequest;
class AssignBlockResponse;
class ListFilesRequest;
class ListFilesResponse;
class OpenFileRequest;
class OpenFileResponse;
class ReadBlockRequest;
class ReadBlockResponse;

// ===================================================================

class BlockReportRequest : public ::google::protobuf::Message {
 public:
  BlockReportRequest();
  virtual ~BlockReportRequest();

  BlockReportRequest(const BlockReportRequest& from);

  inline BlockReportRequest& operator=(const BlockReportRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockReportRequest& default_instance();

  void Swap(BlockReportRequest* other);

  // implements Message ----------------------------------------------

  BlockReportRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlockReportRequest& from);
  void MergeFrom(const BlockReportRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional .DataNodeLocation location = 2;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 2;
  inline const ::DataNodeLocation& location() const;
  inline ::DataNodeLocation* mutable_location();
  inline ::DataNodeLocation* release_location();
  inline void set_allocated_location(::DataNodeLocation* location);

  // repeated int32 blockNumbers = 3;
  inline int blocknumbers_size() const;
  inline void clear_blocknumbers();
  static const int kBlockNumbersFieldNumber = 3;
  inline ::google::protobuf::int32 blocknumbers(int index) const;
  inline void set_blocknumbers(int index, ::google::protobuf::int32 value);
  inline void add_blocknumbers(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      blocknumbers() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_blocknumbers();

  // @@protoc_insertion_point(class_scope:BlockReportRequest)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_location();
  inline void clear_has_location();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataNodeLocation* location_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > blocknumbers_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_project_2eproto();
  friend void protobuf_AssignDesc_project_2eproto();
  friend void protobuf_ShutdownFile_project_2eproto();

  void InitAsDefaultInstance();
  static BlockReportRequest* default_instance_;
};
// -------------------------------------------------------------------

class BlockReportResponse : public ::google::protobuf::Message {
 public:
  BlockReportResponse();
  virtual ~BlockReportResponse();

  BlockReportResponse(const BlockReportResponse& from);

  inline BlockReportResponse& operator=(const BlockReportResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockReportResponse& default_instance();

  void Swap(BlockReportResponse* other);

  // implements Message ----------------------------------------------

  BlockReportResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlockReportResponse& from);
  void MergeFrom(const BlockReportResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 status = 1;
  inline int status_size() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status(int index) const;
  inline void set_status(int index, ::google::protobuf::int32 value);
  inline void add_status(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      status() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_status();

  // @@protoc_insertion_point(class_scope:BlockReportResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > status_;
  friend void  protobuf_AddDesc_project_2eproto();
  friend void protobuf_AssignDesc_project_2eproto();
  friend void protobuf_ShutdownFile_project_2eproto();

  void InitAsDefaultInstance();
  static BlockReportResponse* default_instance_;
};
// -------------------------------------------------------------------

class HeartBeatRequest : public ::google::protobuf::Message {
 public:
  HeartBeatRequest();
  virtual ~HeartBeatRequest();

  HeartBeatRequest(const HeartBeatRequest& from);

  inline HeartBeatRequest& operator=(const HeartBeatRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeatRequest& default_instance();

  void Swap(HeartBeatRequest* other);

  // implements Message ----------------------------------------------

  HeartBeatRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartBeatRequest& from);
  void MergeFrom(const HeartBeatRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HeartBeatRequest)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_project_2eproto();
  friend void protobuf_AssignDesc_project_2eproto();
  friend void protobuf_ShutdownFile_project_2eproto();

  void InitAsDefaultInstance();
  static HeartBeatRequest* default_instance_;
};
// -------------------------------------------------------------------

class HeartBeatResponse : public ::google::protobuf::Message {
 public:
  HeartBeatResponse();
  virtual ~HeartBeatResponse();

  HeartBeatResponse(const HeartBeatResponse& from);

  inline HeartBeatResponse& operator=(const HeartBeatResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeatResponse& default_instance();

  void Swap(HeartBeatResponse* other);

  // implements Message ----------------------------------------------

  HeartBeatResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartBeatResponse& from);
  void MergeFrom(const HeartBeatResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HeartBeatResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend void  protobuf_AddDesc_project_2eproto();
  friend void protobuf_AssignDesc_project_2eproto();
  friend void protobuf_ShutdownFile_project_2eproto();

  void InitAsDefaultInstance();
  static HeartBeatResponse* default_instance_;
};
// -------------------------------------------------------------------

class WriteBlockRequest : public ::google::protobuf::Message {
 public:
  WriteBlockRequest();
  virtual ~WriteBlockRequest();

  WriteBlockRequest(const WriteBlockRequest& from);

  inline WriteBlockRequest& operator=(const WriteBlockRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteBlockRequest& default_instance();

  void Swap(WriteBlockRequest* other);

  // implements Message ----------------------------------------------

  WriteBlockRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteBlockRequest& from);
  void MergeFrom(const WriteBlockRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::std::string& data(int index) const;
  inline ::std::string* mutable_data(int index);
  inline void set_data(int index, const ::std::string& value);
  inline void set_data(int index, const char* value);
  inline void set_data(int index, const void* value, size_t size);
  inline ::std::string* add_data();
  inline void add_data(const ::std::string& value);
  inline void add_data(const char* value);
  inline void add_data(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& data() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_data();

  // optional .BlockLocations blockInfo = 2;
  inline bool has_blockinfo() const;
  inline void clear_blockinfo();
  static const int kBlockInfoFieldNumber = 2;
  inline const ::BlockLocations& blockinfo() const;
  inline ::BlockLocations* mutable_blockinfo();
  inline ::BlockLocations* release_blockinfo();
  inline void set_allocated_blockinfo(::BlockLocations* blockinfo);

  // @@protoc_insertion_point(class_scope:WriteBlockRequest)
 private:
  inline void set_has_blockinfo();
  inline void clear_has_blockinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> data_;
  ::BlockLocations* blockinfo_;
  friend void  protobuf_AddDesc_project_2eproto();
  friend void protobuf_AssignDesc_project_2eproto();
  friend void protobuf_ShutdownFile_project_2eproto();

  void InitAsDefaultInstance();
  static WriteBlockRequest* default_instance_;
};
// -------------------------------------------------------------------

class WriteBlockResponse : public ::google::protobuf::Message {
 public:
  WriteBlockResponse();
  virtual ~WriteBlockResponse();

  WriteBlockResponse(const WriteBlockResponse& from);

  inline WriteBlockResponse& operator=(const WriteBlockResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteBlockResponse& default_instance();

  void Swap(WriteBlockResponse* other);

  // implements Message ----------------------------------------------

  WriteBlockResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteBlockResponse& from);
  void MergeFrom(const WriteBlockResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WriteBlockResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend void  protobuf_AddDesc_project_2eproto();
  friend void protobuf_AssignDesc_project_2eproto();
  friend void protobuf_ShutdownFile_project_2eproto();

  void InitAsDefaultInstance();
  static WriteBlockResponse* default_instance_;
};
// -------------------------------------------------------------------

class CloseFileRequest : public ::google::protobuf::Message {
 public:
  CloseFileRequest();
  virtual ~CloseFileRequest();

  CloseFileRequest(const CloseFileRequest& from);

  inline CloseFileRequest& operator=(const CloseFileRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloseFileRequest& default_instance();

  void Swap(CloseFileRequest* other);

  // implements Message ----------------------------------------------

  CloseFileRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CloseFileRequest& from);
  void MergeFrom(const CloseFileRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 handle = 1;
  inline bool has_handle() const;
  inline void clear_handle();
  static const int kHandleFieldNumber = 1;
  inline ::google::protobuf::int32 handle() const;
  inline void set_handle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CloseFileRequest)
 private:
  inline void set_has_handle();
  inline void clear_has_handle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 handle_;
  friend void  protobuf_AddDesc_project_2eproto();
  friend void protobuf_AssignDesc_project_2eproto();
  friend void protobuf_ShutdownFile_project_2eproto();

  void InitAsDefaultInstance();
  static CloseFileRequest* default_instance_;
};
// -------------------------------------------------------------------

class CloseFileResponse : public ::google::protobuf::Message {
 public:
  CloseFileResponse();
  virtual ~CloseFileResponse();

  CloseFileResponse(const CloseFileResponse& from);

  inline CloseFileResponse& operator=(const CloseFileResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloseFileResponse& default_instance();

  void Swap(CloseFileResponse* other);

  // implements Message ----------------------------------------------

  CloseFileResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CloseFileResponse& from);
  void MergeFrom(const CloseFileResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CloseFileResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend void  protobuf_AddDesc_project_2eproto();
  friend void protobuf_AssignDesc_project_2eproto();
  friend void protobuf_ShutdownFile_project_2eproto();

  void InitAsDefaultInstance();
  static CloseFileResponse* default_instance_;
};
// -------------------------------------------------------------------

class DataNodeLocation : public ::google::protobuf::Message {
 public:
  DataNodeLocation();
  virtual ~DataNodeLocation();

  DataNodeLocation(const DataNodeLocation& from);

  inline DataNodeLocation& operator=(const DataNodeLocation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataNodeLocation& default_instance();

  void Swap(DataNodeLocation* other);

  // implements Message ----------------------------------------------

  DataNodeLocation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataNodeLocation& from);
  void MergeFrom(const DataNodeLocation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // optional int32 port = 2;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 2;
  inline ::google::protobuf::int32 port() const;
  inline void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DataNodeLocation)
 private:
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* ip_;
  ::google::protobuf::int32 port_;
  friend void  protobuf_AddDesc_project_2eproto();
  friend void protobuf_AssignDesc_project_2eproto();
  friend void protobuf_ShutdownFile_project_2eproto();

  void InitAsDefaultInstance();
  static DataNodeLocation* default_instance_;
};
// -------------------------------------------------------------------

class BlockLocations : public ::google::protobuf::Message {
 public:
  BlockLocations();
  virtual ~BlockLocations();

  BlockLocations(const BlockLocations& from);

  inline BlockLocations& operator=(const BlockLocations& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockLocations& default_instance();

  void Swap(BlockLocations* other);

  // implements Message ----------------------------------------------

  BlockLocations* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlockLocations& from);
  void MergeFrom(const BlockLocations& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 blockNumber = 1;
  inline bool has_blocknumber() const;
  inline void clear_blocknumber();
  static const int kBlockNumberFieldNumber = 1;
  inline ::google::protobuf::int32 blocknumber() const;
  inline void set_blocknumber(::google::protobuf::int32 value);

  // repeated .DataNodeLocation locations = 2;
  inline int locations_size() const;
  inline void clear_locations();
  static const int kLocationsFieldNumber = 2;
  inline const ::DataNodeLocation& locations(int index) const;
  inline ::DataNodeLocation* mutable_locations(int index);
  inline ::DataNodeLocation* add_locations();
  inline const ::google::protobuf::RepeatedPtrField< ::DataNodeLocation >&
      locations() const;
  inline ::google::protobuf::RepeatedPtrField< ::DataNodeLocation >*
      mutable_locations();

  // @@protoc_insertion_point(class_scope:BlockLocations)
 private:
  inline void set_has_blocknumber();
  inline void clear_has_blocknumber();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::DataNodeLocation > locations_;
  ::google::protobuf::int32 blocknumber_;
  friend void  protobuf_AddDesc_project_2eproto();
  friend void protobuf_AssignDesc_project_2eproto();
  friend void protobuf_ShutdownFile_project_2eproto();

  void InitAsDefaultInstance();
  static BlockLocations* default_instance_;
};
// -------------------------------------------------------------------

class BlockLocationRequest : public ::google::protobuf::Message {
 public:
  BlockLocationRequest();
  virtual ~BlockLocationRequest();

  BlockLocationRequest(const BlockLocationRequest& from);

  inline BlockLocationRequest& operator=(const BlockLocationRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockLocationRequest& default_instance();

  void Swap(BlockLocationRequest* other);

  // implements Message ----------------------------------------------

  BlockLocationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlockLocationRequest& from);
  void MergeFrom(const BlockLocationRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 blockNums = 1;
  inline int blocknums_size() const;
  inline void clear_blocknums();
  static const int kBlockNumsFieldNumber = 1;
  inline ::google::protobuf::int32 blocknums(int index) const;
  inline void set_blocknums(int index, ::google::protobuf::int32 value);
  inline void add_blocknums(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      blocknums() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_blocknums();

  // @@protoc_insertion_point(class_scope:BlockLocationRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > blocknums_;
  friend void  protobuf_AddDesc_project_2eproto();
  friend void protobuf_AssignDesc_project_2eproto();
  friend void protobuf_ShutdownFile_project_2eproto();

  void InitAsDefaultInstance();
  static BlockLocationRequest* default_instance_;
};
// -------------------------------------------------------------------

class BlockLocationResponse : public ::google::protobuf::Message {
 public:
  BlockLocationResponse();
  virtual ~BlockLocationResponse();

  BlockLocationResponse(const BlockLocationResponse& from);

  inline BlockLocationResponse& operator=(const BlockLocationResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockLocationResponse& default_instance();

  void Swap(BlockLocationResponse* other);

  // implements Message ----------------------------------------------

  BlockLocationResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlockLocationResponse& from);
  void MergeFrom(const BlockLocationResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // repeated .BlockLocations blockLocations = 2;
  inline int blocklocations_size() const;
  inline void clear_blocklocations();
  static const int kBlockLocationsFieldNumber = 2;
  inline const ::BlockLocations& blocklocations(int index) const;
  inline ::BlockLocations* mutable_blocklocations(int index);
  inline ::BlockLocations* add_blocklocations();
  inline const ::google::protobuf::RepeatedPtrField< ::BlockLocations >&
      blocklocations() const;
  inline ::google::protobuf::RepeatedPtrField< ::BlockLocations >*
      mutable_blocklocations();

  // @@protoc_insertion_point(class_scope:BlockLocationResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BlockLocations > blocklocations_;
  ::google::protobuf::int32 status_;
  friend void  protobuf_AddDesc_project_2eproto();
  friend void protobuf_AssignDesc_project_2eproto();
  friend void protobuf_ShutdownFile_project_2eproto();

  void InitAsDefaultInstance();
  static BlockLocationResponse* default_instance_;
};
// -------------------------------------------------------------------

class AssignBlockRequest : public ::google::protobuf::Message {
 public:
  AssignBlockRequest();
  virtual ~AssignBlockRequest();

  AssignBlockRequest(const AssignBlockRequest& from);

  inline AssignBlockRequest& operator=(const AssignBlockRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AssignBlockRequest& default_instance();

  void Swap(AssignBlockRequest* other);

  // implements Message ----------------------------------------------

  AssignBlockRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AssignBlockRequest& from);
  void MergeFrom(const AssignBlockRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 handle = 1;
  inline bool has_handle() const;
  inline void clear_handle();
  static const int kHandleFieldNumber = 1;
  inline ::google::protobuf::int32 handle() const;
  inline void set_handle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AssignBlockRequest)
 private:
  inline void set_has_handle();
  inline void clear_has_handle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 handle_;
  friend void  protobuf_AddDesc_project_2eproto();
  friend void protobuf_AssignDesc_project_2eproto();
  friend void protobuf_ShutdownFile_project_2eproto();

  void InitAsDefaultInstance();
  static AssignBlockRequest* default_instance_;
};
// -------------------------------------------------------------------

class AssignBlockResponse : public ::google::protobuf::Message {
 public:
  AssignBlockResponse();
  virtual ~AssignBlockResponse();

  AssignBlockResponse(const AssignBlockResponse& from);

  inline AssignBlockResponse& operator=(const AssignBlockResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AssignBlockResponse& default_instance();

  void Swap(AssignBlockResponse* other);

  // implements Message ----------------------------------------------

  AssignBlockResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AssignBlockResponse& from);
  void MergeFrom(const AssignBlockResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional .BlockLocations newBlock = 2;
  inline bool has_newblock() const;
  inline void clear_newblock();
  static const int kNewBlockFieldNumber = 2;
  inline const ::BlockLocations& newblock() const;
  inline ::BlockLocations* mutable_newblock();
  inline ::BlockLocations* release_newblock();
  inline void set_allocated_newblock(::BlockLocations* newblock);

  // @@protoc_insertion_point(class_scope:AssignBlockResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_newblock();
  inline void clear_has_newblock();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::BlockLocations* newblock_;
  ::google::protobuf::int32 status_;
  friend void  protobuf_AddDesc_project_2eproto();
  friend void protobuf_AssignDesc_project_2eproto();
  friend void protobuf_ShutdownFile_project_2eproto();

  void InitAsDefaultInstance();
  static AssignBlockResponse* default_instance_;
};
// -------------------------------------------------------------------

class ListFilesRequest : public ::google::protobuf::Message {
 public:
  ListFilesRequest();
  virtual ~ListFilesRequest();

  ListFilesRequest(const ListFilesRequest& from);

  inline ListFilesRequest& operator=(const ListFilesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFilesRequest& default_instance();

  void Swap(ListFilesRequest* other);

  // implements Message ----------------------------------------------

  ListFilesRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListFilesRequest& from);
  void MergeFrom(const ListFilesRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string dirName = 1;
  inline bool has_dirname() const;
  inline void clear_dirname();
  static const int kDirNameFieldNumber = 1;
  inline const ::std::string& dirname() const;
  inline void set_dirname(const ::std::string& value);
  inline void set_dirname(const char* value);
  inline void set_dirname(const char* value, size_t size);
  inline ::std::string* mutable_dirname();
  inline ::std::string* release_dirname();
  inline void set_allocated_dirname(::std::string* dirname);

  // @@protoc_insertion_point(class_scope:ListFilesRequest)
 private:
  inline void set_has_dirname();
  inline void clear_has_dirname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* dirname_;
  friend void  protobuf_AddDesc_project_2eproto();
  friend void protobuf_AssignDesc_project_2eproto();
  friend void protobuf_ShutdownFile_project_2eproto();

  void InitAsDefaultInstance();
  static ListFilesRequest* default_instance_;
};
// -------------------------------------------------------------------

class ListFilesResponse : public ::google::protobuf::Message {
 public:
  ListFilesResponse();
  virtual ~ListFilesResponse();

  ListFilesResponse(const ListFilesResponse& from);

  inline ListFilesResponse& operator=(const ListFilesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFilesResponse& default_instance();

  void Swap(ListFilesResponse* other);

  // implements Message ----------------------------------------------

  ListFilesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListFilesResponse& from);
  void MergeFrom(const ListFilesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // repeated string fileNames = 2;
  inline int filenames_size() const;
  inline void clear_filenames();
  static const int kFileNamesFieldNumber = 2;
  inline const ::std::string& filenames(int index) const;
  inline ::std::string* mutable_filenames(int index);
  inline void set_filenames(int index, const ::std::string& value);
  inline void set_filenames(int index, const char* value);
  inline void set_filenames(int index, const char* value, size_t size);
  inline ::std::string* add_filenames();
  inline void add_filenames(const ::std::string& value);
  inline void add_filenames(const char* value);
  inline void add_filenames(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& filenames() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_filenames();

  // @@protoc_insertion_point(class_scope:ListFilesResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> filenames_;
  ::google::protobuf::int32 status_;
  friend void  protobuf_AddDesc_project_2eproto();
  friend void protobuf_AssignDesc_project_2eproto();
  friend void protobuf_ShutdownFile_project_2eproto();

  void InitAsDefaultInstance();
  static ListFilesResponse* default_instance_;
};
// -------------------------------------------------------------------

class OpenFileRequest : public ::google::protobuf::Message {
 public:
  OpenFileRequest();
  virtual ~OpenFileRequest();

  OpenFileRequest(const OpenFileRequest& from);

  inline OpenFileRequest& operator=(const OpenFileRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenFileRequest& default_instance();

  void Swap(OpenFileRequest* other);

  // implements Message ----------------------------------------------

  OpenFileRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenFileRequest& from);
  void MergeFrom(const OpenFileRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string fileName = 1;
  inline bool has_filename() const;
  inline void clear_filename();
  static const int kFileNameFieldNumber = 1;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const char* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // optional bool forRead = 2;
  inline bool has_forread() const;
  inline void clear_forread();
  static const int kForReadFieldNumber = 2;
  inline bool forread() const;
  inline void set_forread(bool value);

  // @@protoc_insertion_point(class_scope:OpenFileRequest)
 private:
  inline void set_has_filename();
  inline void clear_has_filename();
  inline void set_has_forread();
  inline void clear_has_forread();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* filename_;
  bool forread_;
  friend void  protobuf_AddDesc_project_2eproto();
  friend void protobuf_AssignDesc_project_2eproto();
  friend void protobuf_ShutdownFile_project_2eproto();

  void InitAsDefaultInstance();
  static OpenFileRequest* default_instance_;
};
// -------------------------------------------------------------------

class OpenFileResponse : public ::google::protobuf::Message {
 public:
  OpenFileResponse();
  virtual ~OpenFileResponse();

  OpenFileResponse(const OpenFileResponse& from);

  inline OpenFileResponse& operator=(const OpenFileResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenFileResponse& default_instance();

  void Swap(OpenFileResponse* other);

  // implements Message ----------------------------------------------

  OpenFileResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenFileResponse& from);
  void MergeFrom(const OpenFileResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 handle = 2;
  inline bool has_handle() const;
  inline void clear_handle();
  static const int kHandleFieldNumber = 2;
  inline ::google::protobuf::int32 handle() const;
  inline void set_handle(::google::protobuf::int32 value);

  // repeated .BlockLocations blockInfo = 3;
  inline int blockinfo_size() const;
  inline void clear_blockinfo();
  static const int kBlockInfoFieldNumber = 3;
  inline const ::BlockLocations& blockinfo(int index) const;
  inline ::BlockLocations* mutable_blockinfo(int index);
  inline ::BlockLocations* add_blockinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::BlockLocations >&
      blockinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::BlockLocations >*
      mutable_blockinfo();

  // @@protoc_insertion_point(class_scope:OpenFileResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_handle();
  inline void clear_has_handle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 handle_;
  ::google::protobuf::RepeatedPtrField< ::BlockLocations > blockinfo_;
  friend void  protobuf_AddDesc_project_2eproto();
  friend void protobuf_AssignDesc_project_2eproto();
  friend void protobuf_ShutdownFile_project_2eproto();

  void InitAsDefaultInstance();
  static OpenFileResponse* default_instance_;
};
// -------------------------------------------------------------------

class ReadBlockRequest : public ::google::protobuf::Message {
 public:
  ReadBlockRequest();
  virtual ~ReadBlockRequest();

  ReadBlockRequest(const ReadBlockRequest& from);

  inline ReadBlockRequest& operator=(const ReadBlockRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadBlockRequest& default_instance();

  void Swap(ReadBlockRequest* other);

  // implements Message ----------------------------------------------

  ReadBlockRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadBlockRequest& from);
  void MergeFrom(const ReadBlockRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 blockNumber = 1;
  inline bool has_blocknumber() const;
  inline void clear_blocknumber();
  static const int kBlockNumberFieldNumber = 1;
  inline ::google::protobuf::int32 blocknumber() const;
  inline void set_blocknumber(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ReadBlockRequest)
 private:
  inline void set_has_blocknumber();
  inline void clear_has_blocknumber();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 blocknumber_;
  friend void  protobuf_AddDesc_project_2eproto();
  friend void protobuf_AssignDesc_project_2eproto();
  friend void protobuf_ShutdownFile_project_2eproto();

  void InitAsDefaultInstance();
  static ReadBlockRequest* default_instance_;
};
// -------------------------------------------------------------------

class ReadBlockResponse : public ::google::protobuf::Message {
 public:
  ReadBlockResponse();
  virtual ~ReadBlockResponse();

  ReadBlockResponse(const ReadBlockResponse& from);

  inline ReadBlockResponse& operator=(const ReadBlockResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadBlockResponse& default_instance();

  void Swap(ReadBlockResponse* other);

  // implements Message ----------------------------------------------

  ReadBlockResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadBlockResponse& from);
  void MergeFrom(const ReadBlockResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // repeated bytes data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::std::string& data(int index) const;
  inline ::std::string* mutable_data(int index);
  inline void set_data(int index, const ::std::string& value);
  inline void set_data(int index, const char* value);
  inline void set_data(int index, const void* value, size_t size);
  inline ::std::string* add_data();
  inline void add_data(const ::std::string& value);
  inline void add_data(const char* value);
  inline void add_data(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& data() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_data();

  // @@protoc_insertion_point(class_scope:ReadBlockResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> data_;
  ::google::protobuf::int32 status_;
  friend void  protobuf_AddDesc_project_2eproto();
  friend void protobuf_AssignDesc_project_2eproto();
  friend void protobuf_ShutdownFile_project_2eproto();

  void InitAsDefaultInstance();
  static ReadBlockResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// BlockReportRequest

// optional int32 id = 1;
inline bool BlockReportRequest::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BlockReportRequest::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BlockReportRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BlockReportRequest::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 BlockReportRequest::id() const {
  // @@protoc_insertion_point(field_get:BlockReportRequest.id)
  return id_;
}
inline void BlockReportRequest::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:BlockReportRequest.id)
}

// optional .DataNodeLocation location = 2;
inline bool BlockReportRequest::has_location() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BlockReportRequest::set_has_location() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BlockReportRequest::clear_has_location() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BlockReportRequest::clear_location() {
  if (location_ != NULL) location_->::DataNodeLocation::Clear();
  clear_has_location();
}
inline const ::DataNodeLocation& BlockReportRequest::location() const {
  // @@protoc_insertion_point(field_get:BlockReportRequest.location)
  return location_ != NULL ? *location_ : *default_instance_->location_;
}
inline ::DataNodeLocation* BlockReportRequest::mutable_location() {
  set_has_location();
  if (location_ == NULL) location_ = new ::DataNodeLocation;
  // @@protoc_insertion_point(field_mutable:BlockReportRequest.location)
  return location_;
}
inline ::DataNodeLocation* BlockReportRequest::release_location() {
  clear_has_location();
  ::DataNodeLocation* temp = location_;
  location_ = NULL;
  return temp;
}
inline void BlockReportRequest::set_allocated_location(::DataNodeLocation* location) {
  delete location_;
  location_ = location;
  if (location) {
    set_has_location();
  } else {
    clear_has_location();
  }
  // @@protoc_insertion_point(field_set_allocated:BlockReportRequest.location)
}

// repeated int32 blockNumbers = 3;
inline int BlockReportRequest::blocknumbers_size() const {
  return blocknumbers_.size();
}
inline void BlockReportRequest::clear_blocknumbers() {
  blocknumbers_.Clear();
}
inline ::google::protobuf::int32 BlockReportRequest::blocknumbers(int index) const {
  // @@protoc_insertion_point(field_get:BlockReportRequest.blockNumbers)
  return blocknumbers_.Get(index);
}
inline void BlockReportRequest::set_blocknumbers(int index, ::google::protobuf::int32 value) {
  blocknumbers_.Set(index, value);
  // @@protoc_insertion_point(field_set:BlockReportRequest.blockNumbers)
}
inline void BlockReportRequest::add_blocknumbers(::google::protobuf::int32 value) {
  blocknumbers_.Add(value);
  // @@protoc_insertion_point(field_add:BlockReportRequest.blockNumbers)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BlockReportRequest::blocknumbers() const {
  // @@protoc_insertion_point(field_list:BlockReportRequest.blockNumbers)
  return blocknumbers_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BlockReportRequest::mutable_blocknumbers() {
  // @@protoc_insertion_point(field_mutable_list:BlockReportRequest.blockNumbers)
  return &blocknumbers_;
}

// -------------------------------------------------------------------

// BlockReportResponse

// repeated int32 status = 1;
inline int BlockReportResponse::status_size() const {
  return status_.size();
}
inline void BlockReportResponse::clear_status() {
  status_.Clear();
}
inline ::google::protobuf::int32 BlockReportResponse::status(int index) const {
  // @@protoc_insertion_point(field_get:BlockReportResponse.status)
  return status_.Get(index);
}
inline void BlockReportResponse::set_status(int index, ::google::protobuf::int32 value) {
  status_.Set(index, value);
  // @@protoc_insertion_point(field_set:BlockReportResponse.status)
}
inline void BlockReportResponse::add_status(::google::protobuf::int32 value) {
  status_.Add(value);
  // @@protoc_insertion_point(field_add:BlockReportResponse.status)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BlockReportResponse::status() const {
  // @@protoc_insertion_point(field_list:BlockReportResponse.status)
  return status_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BlockReportResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable_list:BlockReportResponse.status)
  return &status_;
}

// -------------------------------------------------------------------

// HeartBeatRequest

// optional int32 id = 1;
inline bool HeartBeatRequest::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartBeatRequest::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartBeatRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartBeatRequest::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 HeartBeatRequest::id() const {
  // @@protoc_insertion_point(field_get:HeartBeatRequest.id)
  return id_;
}
inline void HeartBeatRequest::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:HeartBeatRequest.id)
}

// -------------------------------------------------------------------

// HeartBeatResponse

// optional int32 status = 1;
inline bool HeartBeatResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartBeatResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartBeatResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartBeatResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 HeartBeatResponse::status() const {
  // @@protoc_insertion_point(field_get:HeartBeatResponse.status)
  return status_;
}
inline void HeartBeatResponse::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:HeartBeatResponse.status)
}

// -------------------------------------------------------------------

// WriteBlockRequest

// repeated bytes data = 1;
inline int WriteBlockRequest::data_size() const {
  return data_.size();
}
inline void WriteBlockRequest::clear_data() {
  data_.Clear();
}
inline const ::std::string& WriteBlockRequest::data(int index) const {
  // @@protoc_insertion_point(field_get:WriteBlockRequest.data)
  return data_.Get(index);
}
inline ::std::string* WriteBlockRequest::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:WriteBlockRequest.data)
  return data_.Mutable(index);
}
inline void WriteBlockRequest::set_data(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:WriteBlockRequest.data)
  data_.Mutable(index)->assign(value);
}
inline void WriteBlockRequest::set_data(int index, const char* value) {
  data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:WriteBlockRequest.data)
}
inline void WriteBlockRequest::set_data(int index, const void* value, size_t size) {
  data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:WriteBlockRequest.data)
}
inline ::std::string* WriteBlockRequest::add_data() {
  return data_.Add();
}
inline void WriteBlockRequest::add_data(const ::std::string& value) {
  data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:WriteBlockRequest.data)
}
inline void WriteBlockRequest::add_data(const char* value) {
  data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:WriteBlockRequest.data)
}
inline void WriteBlockRequest::add_data(const void* value, size_t size) {
  data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:WriteBlockRequest.data)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
WriteBlockRequest::data() const {
  // @@protoc_insertion_point(field_list:WriteBlockRequest.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
WriteBlockRequest::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:WriteBlockRequest.data)
  return &data_;
}

// optional .BlockLocations blockInfo = 2;
inline bool WriteBlockRequest::has_blockinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WriteBlockRequest::set_has_blockinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WriteBlockRequest::clear_has_blockinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WriteBlockRequest::clear_blockinfo() {
  if (blockinfo_ != NULL) blockinfo_->::BlockLocations::Clear();
  clear_has_blockinfo();
}
inline const ::BlockLocations& WriteBlockRequest::blockinfo() const {
  // @@protoc_insertion_point(field_get:WriteBlockRequest.blockInfo)
  return blockinfo_ != NULL ? *blockinfo_ : *default_instance_->blockinfo_;
}
inline ::BlockLocations* WriteBlockRequest::mutable_blockinfo() {
  set_has_blockinfo();
  if (blockinfo_ == NULL) blockinfo_ = new ::BlockLocations;
  // @@protoc_insertion_point(field_mutable:WriteBlockRequest.blockInfo)
  return blockinfo_;
}
inline ::BlockLocations* WriteBlockRequest::release_blockinfo() {
  clear_has_blockinfo();
  ::BlockLocations* temp = blockinfo_;
  blockinfo_ = NULL;
  return temp;
}
inline void WriteBlockRequest::set_allocated_blockinfo(::BlockLocations* blockinfo) {
  delete blockinfo_;
  blockinfo_ = blockinfo;
  if (blockinfo) {
    set_has_blockinfo();
  } else {
    clear_has_blockinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:WriteBlockRequest.blockInfo)
}

// -------------------------------------------------------------------

// WriteBlockResponse

// optional int32 status = 1;
inline bool WriteBlockResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WriteBlockResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WriteBlockResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WriteBlockResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 WriteBlockResponse::status() const {
  // @@protoc_insertion_point(field_get:WriteBlockResponse.status)
  return status_;
}
inline void WriteBlockResponse::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:WriteBlockResponse.status)
}

// -------------------------------------------------------------------

// CloseFileRequest

// optional int32 handle = 1;
inline bool CloseFileRequest::has_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CloseFileRequest::set_has_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CloseFileRequest::clear_has_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CloseFileRequest::clear_handle() {
  handle_ = 0;
  clear_has_handle();
}
inline ::google::protobuf::int32 CloseFileRequest::handle() const {
  // @@protoc_insertion_point(field_get:CloseFileRequest.handle)
  return handle_;
}
inline void CloseFileRequest::set_handle(::google::protobuf::int32 value) {
  set_has_handle();
  handle_ = value;
  // @@protoc_insertion_point(field_set:CloseFileRequest.handle)
}

// -------------------------------------------------------------------

// CloseFileResponse

// optional int32 status = 1;
inline bool CloseFileResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CloseFileResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CloseFileResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CloseFileResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 CloseFileResponse::status() const {
  // @@protoc_insertion_point(field_get:CloseFileResponse.status)
  return status_;
}
inline void CloseFileResponse::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:CloseFileResponse.status)
}

// -------------------------------------------------------------------

// DataNodeLocation

// optional string ip = 1;
inline bool DataNodeLocation::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataNodeLocation::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataNodeLocation::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataNodeLocation::clear_ip() {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& DataNodeLocation::ip() const {
  // @@protoc_insertion_point(field_get:DataNodeLocation.ip)
  return *ip_;
}
inline void DataNodeLocation::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set:DataNodeLocation.ip)
}
inline void DataNodeLocation::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:DataNodeLocation.ip)
}
inline void DataNodeLocation::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:DataNodeLocation.ip)
}
inline ::std::string* DataNodeLocation::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:DataNodeLocation.ip)
  return ip_;
}
inline ::std::string* DataNodeLocation::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DataNodeLocation::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:DataNodeLocation.ip)
}

// optional int32 port = 2;
inline bool DataNodeLocation::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataNodeLocation::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataNodeLocation::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataNodeLocation::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 DataNodeLocation::port() const {
  // @@protoc_insertion_point(field_get:DataNodeLocation.port)
  return port_;
}
inline void DataNodeLocation::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:DataNodeLocation.port)
}

// -------------------------------------------------------------------

// BlockLocations

// optional int32 blockNumber = 1;
inline bool BlockLocations::has_blocknumber() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BlockLocations::set_has_blocknumber() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BlockLocations::clear_has_blocknumber() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BlockLocations::clear_blocknumber() {
  blocknumber_ = 0;
  clear_has_blocknumber();
}
inline ::google::protobuf::int32 BlockLocations::blocknumber() const {
  // @@protoc_insertion_point(field_get:BlockLocations.blockNumber)
  return blocknumber_;
}
inline void BlockLocations::set_blocknumber(::google::protobuf::int32 value) {
  set_has_blocknumber();
  blocknumber_ = value;
  // @@protoc_insertion_point(field_set:BlockLocations.blockNumber)
}

// repeated .DataNodeLocation locations = 2;
inline int BlockLocations::locations_size() const {
  return locations_.size();
}
inline void BlockLocations::clear_locations() {
  locations_.Clear();
}
inline const ::DataNodeLocation& BlockLocations::locations(int index) const {
  // @@protoc_insertion_point(field_get:BlockLocations.locations)
  return locations_.Get(index);
}
inline ::DataNodeLocation* BlockLocations::mutable_locations(int index) {
  // @@protoc_insertion_point(field_mutable:BlockLocations.locations)
  return locations_.Mutable(index);
}
inline ::DataNodeLocation* BlockLocations::add_locations() {
  // @@protoc_insertion_point(field_add:BlockLocations.locations)
  return locations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DataNodeLocation >&
BlockLocations::locations() const {
  // @@protoc_insertion_point(field_list:BlockLocations.locations)
  return locations_;
}
inline ::google::protobuf::RepeatedPtrField< ::DataNodeLocation >*
BlockLocations::mutable_locations() {
  // @@protoc_insertion_point(field_mutable_list:BlockLocations.locations)
  return &locations_;
}

// -------------------------------------------------------------------

// BlockLocationRequest

// repeated int32 blockNums = 1;
inline int BlockLocationRequest::blocknums_size() const {
  return blocknums_.size();
}
inline void BlockLocationRequest::clear_blocknums() {
  blocknums_.Clear();
}
inline ::google::protobuf::int32 BlockLocationRequest::blocknums(int index) const {
  // @@protoc_insertion_point(field_get:BlockLocationRequest.blockNums)
  return blocknums_.Get(index);
}
inline void BlockLocationRequest::set_blocknums(int index, ::google::protobuf::int32 value) {
  blocknums_.Set(index, value);
  // @@protoc_insertion_point(field_set:BlockLocationRequest.blockNums)
}
inline void BlockLocationRequest::add_blocknums(::google::protobuf::int32 value) {
  blocknums_.Add(value);
  // @@protoc_insertion_point(field_add:BlockLocationRequest.blockNums)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BlockLocationRequest::blocknums() const {
  // @@protoc_insertion_point(field_list:BlockLocationRequest.blockNums)
  return blocknums_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BlockLocationRequest::mutable_blocknums() {
  // @@protoc_insertion_point(field_mutable_list:BlockLocationRequest.blockNums)
  return &blocknums_;
}

// -------------------------------------------------------------------

// BlockLocationResponse

// optional int32 status = 1;
inline bool BlockLocationResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BlockLocationResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BlockLocationResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BlockLocationResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 BlockLocationResponse::status() const {
  // @@protoc_insertion_point(field_get:BlockLocationResponse.status)
  return status_;
}
inline void BlockLocationResponse::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:BlockLocationResponse.status)
}

// repeated .BlockLocations blockLocations = 2;
inline int BlockLocationResponse::blocklocations_size() const {
  return blocklocations_.size();
}
inline void BlockLocationResponse::clear_blocklocations() {
  blocklocations_.Clear();
}
inline const ::BlockLocations& BlockLocationResponse::blocklocations(int index) const {
  // @@protoc_insertion_point(field_get:BlockLocationResponse.blockLocations)
  return blocklocations_.Get(index);
}
inline ::BlockLocations* BlockLocationResponse::mutable_blocklocations(int index) {
  // @@protoc_insertion_point(field_mutable:BlockLocationResponse.blockLocations)
  return blocklocations_.Mutable(index);
}
inline ::BlockLocations* BlockLocationResponse::add_blocklocations() {
  // @@protoc_insertion_point(field_add:BlockLocationResponse.blockLocations)
  return blocklocations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BlockLocations >&
BlockLocationResponse::blocklocations() const {
  // @@protoc_insertion_point(field_list:BlockLocationResponse.blockLocations)
  return blocklocations_;
}
inline ::google::protobuf::RepeatedPtrField< ::BlockLocations >*
BlockLocationResponse::mutable_blocklocations() {
  // @@protoc_insertion_point(field_mutable_list:BlockLocationResponse.blockLocations)
  return &blocklocations_;
}

// -------------------------------------------------------------------

// AssignBlockRequest

// optional int32 handle = 1;
inline bool AssignBlockRequest::has_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AssignBlockRequest::set_has_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AssignBlockRequest::clear_has_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AssignBlockRequest::clear_handle() {
  handle_ = 0;
  clear_has_handle();
}
inline ::google::protobuf::int32 AssignBlockRequest::handle() const {
  // @@protoc_insertion_point(field_get:AssignBlockRequest.handle)
  return handle_;
}
inline void AssignBlockRequest::set_handle(::google::protobuf::int32 value) {
  set_has_handle();
  handle_ = value;
  // @@protoc_insertion_point(field_set:AssignBlockRequest.handle)
}

// -------------------------------------------------------------------

// AssignBlockResponse

// optional int32 status = 1;
inline bool AssignBlockResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AssignBlockResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AssignBlockResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AssignBlockResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 AssignBlockResponse::status() const {
  // @@protoc_insertion_point(field_get:AssignBlockResponse.status)
  return status_;
}
inline void AssignBlockResponse::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:AssignBlockResponse.status)
}

// optional .BlockLocations newBlock = 2;
inline bool AssignBlockResponse::has_newblock() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AssignBlockResponse::set_has_newblock() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AssignBlockResponse::clear_has_newblock() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AssignBlockResponse::clear_newblock() {
  if (newblock_ != NULL) newblock_->::BlockLocations::Clear();
  clear_has_newblock();
}
inline const ::BlockLocations& AssignBlockResponse::newblock() const {
  // @@protoc_insertion_point(field_get:AssignBlockResponse.newBlock)
  return newblock_ != NULL ? *newblock_ : *default_instance_->newblock_;
}
inline ::BlockLocations* AssignBlockResponse::mutable_newblock() {
  set_has_newblock();
  if (newblock_ == NULL) newblock_ = new ::BlockLocations;
  // @@protoc_insertion_point(field_mutable:AssignBlockResponse.newBlock)
  return newblock_;
}
inline ::BlockLocations* AssignBlockResponse::release_newblock() {
  clear_has_newblock();
  ::BlockLocations* temp = newblock_;
  newblock_ = NULL;
  return temp;
}
inline void AssignBlockResponse::set_allocated_newblock(::BlockLocations* newblock) {
  delete newblock_;
  newblock_ = newblock;
  if (newblock) {
    set_has_newblock();
  } else {
    clear_has_newblock();
  }
  // @@protoc_insertion_point(field_set_allocated:AssignBlockResponse.newBlock)
}

// -------------------------------------------------------------------

// ListFilesRequest

// optional string dirName = 1;
inline bool ListFilesRequest::has_dirname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ListFilesRequest::set_has_dirname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ListFilesRequest::clear_has_dirname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ListFilesRequest::clear_dirname() {
  if (dirname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dirname_->clear();
  }
  clear_has_dirname();
}
inline const ::std::string& ListFilesRequest::dirname() const {
  // @@protoc_insertion_point(field_get:ListFilesRequest.dirName)
  return *dirname_;
}
inline void ListFilesRequest::set_dirname(const ::std::string& value) {
  set_has_dirname();
  if (dirname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dirname_ = new ::std::string;
  }
  dirname_->assign(value);
  // @@protoc_insertion_point(field_set:ListFilesRequest.dirName)
}
inline void ListFilesRequest::set_dirname(const char* value) {
  set_has_dirname();
  if (dirname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dirname_ = new ::std::string;
  }
  dirname_->assign(value);
  // @@protoc_insertion_point(field_set_char:ListFilesRequest.dirName)
}
inline void ListFilesRequest::set_dirname(const char* value, size_t size) {
  set_has_dirname();
  if (dirname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dirname_ = new ::std::string;
  }
  dirname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ListFilesRequest.dirName)
}
inline ::std::string* ListFilesRequest::mutable_dirname() {
  set_has_dirname();
  if (dirname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dirname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ListFilesRequest.dirName)
  return dirname_;
}
inline ::std::string* ListFilesRequest::release_dirname() {
  clear_has_dirname();
  if (dirname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = dirname_;
    dirname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ListFilesRequest::set_allocated_dirname(::std::string* dirname) {
  if (dirname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dirname_;
  }
  if (dirname) {
    set_has_dirname();
    dirname_ = dirname;
  } else {
    clear_has_dirname();
    dirname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ListFilesRequest.dirName)
}

// -------------------------------------------------------------------

// ListFilesResponse

// optional int32 status = 1;
inline bool ListFilesResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ListFilesResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ListFilesResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ListFilesResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 ListFilesResponse::status() const {
  // @@protoc_insertion_point(field_get:ListFilesResponse.status)
  return status_;
}
inline void ListFilesResponse::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ListFilesResponse.status)
}

// repeated string fileNames = 2;
inline int ListFilesResponse::filenames_size() const {
  return filenames_.size();
}
inline void ListFilesResponse::clear_filenames() {
  filenames_.Clear();
}
inline const ::std::string& ListFilesResponse::filenames(int index) const {
  // @@protoc_insertion_point(field_get:ListFilesResponse.fileNames)
  return filenames_.Get(index);
}
inline ::std::string* ListFilesResponse::mutable_filenames(int index) {
  // @@protoc_insertion_point(field_mutable:ListFilesResponse.fileNames)
  return filenames_.Mutable(index);
}
inline void ListFilesResponse::set_filenames(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ListFilesResponse.fileNames)
  filenames_.Mutable(index)->assign(value);
}
inline void ListFilesResponse::set_filenames(int index, const char* value) {
  filenames_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ListFilesResponse.fileNames)
}
inline void ListFilesResponse::set_filenames(int index, const char* value, size_t size) {
  filenames_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ListFilesResponse.fileNames)
}
inline ::std::string* ListFilesResponse::add_filenames() {
  return filenames_.Add();
}
inline void ListFilesResponse::add_filenames(const ::std::string& value) {
  filenames_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ListFilesResponse.fileNames)
}
inline void ListFilesResponse::add_filenames(const char* value) {
  filenames_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ListFilesResponse.fileNames)
}
inline void ListFilesResponse::add_filenames(const char* value, size_t size) {
  filenames_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ListFilesResponse.fileNames)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListFilesResponse::filenames() const {
  // @@protoc_insertion_point(field_list:ListFilesResponse.fileNames)
  return filenames_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListFilesResponse::mutable_filenames() {
  // @@protoc_insertion_point(field_mutable_list:ListFilesResponse.fileNames)
  return &filenames_;
}

// -------------------------------------------------------------------

// OpenFileRequest

// optional string fileName = 1;
inline bool OpenFileRequest::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpenFileRequest::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpenFileRequest::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpenFileRequest::clear_filename() {
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_->clear();
  }
  clear_has_filename();
}
inline const ::std::string& OpenFileRequest::filename() const {
  // @@protoc_insertion_point(field_get:OpenFileRequest.fileName)
  return *filename_;
}
inline void OpenFileRequest::set_filename(const ::std::string& value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set:OpenFileRequest.fileName)
}
inline void OpenFileRequest::set_filename(const char* value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set_char:OpenFileRequest.fileName)
}
inline void OpenFileRequest::set_filename(const char* value, size_t size) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:OpenFileRequest.fileName)
}
inline ::std::string* OpenFileRequest::mutable_filename() {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:OpenFileRequest.fileName)
  return filename_;
}
inline ::std::string* OpenFileRequest::release_filename() {
  clear_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = filename_;
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OpenFileRequest::set_allocated_filename(::std::string* filename) {
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filename_;
  }
  if (filename) {
    set_has_filename();
    filename_ = filename;
  } else {
    clear_has_filename();
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:OpenFileRequest.fileName)
}

// optional bool forRead = 2;
inline bool OpenFileRequest::has_forread() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OpenFileRequest::set_has_forread() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OpenFileRequest::clear_has_forread() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OpenFileRequest::clear_forread() {
  forread_ = false;
  clear_has_forread();
}
inline bool OpenFileRequest::forread() const {
  // @@protoc_insertion_point(field_get:OpenFileRequest.forRead)
  return forread_;
}
inline void OpenFileRequest::set_forread(bool value) {
  set_has_forread();
  forread_ = value;
  // @@protoc_insertion_point(field_set:OpenFileRequest.forRead)
}

// -------------------------------------------------------------------

// OpenFileResponse

// optional int32 status = 1;
inline bool OpenFileResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpenFileResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpenFileResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpenFileResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 OpenFileResponse::status() const {
  // @@protoc_insertion_point(field_get:OpenFileResponse.status)
  return status_;
}
inline void OpenFileResponse::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:OpenFileResponse.status)
}

// optional int32 handle = 2;
inline bool OpenFileResponse::has_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OpenFileResponse::set_has_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OpenFileResponse::clear_has_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OpenFileResponse::clear_handle() {
  handle_ = 0;
  clear_has_handle();
}
inline ::google::protobuf::int32 OpenFileResponse::handle() const {
  // @@protoc_insertion_point(field_get:OpenFileResponse.handle)
  return handle_;
}
inline void OpenFileResponse::set_handle(::google::protobuf::int32 value) {
  set_has_handle();
  handle_ = value;
  // @@protoc_insertion_point(field_set:OpenFileResponse.handle)
}

// repeated .BlockLocations blockInfo = 3;
inline int OpenFileResponse::blockinfo_size() const {
  return blockinfo_.size();
}
inline void OpenFileResponse::clear_blockinfo() {
  blockinfo_.Clear();
}
inline const ::BlockLocations& OpenFileResponse::blockinfo(int index) const {
  // @@protoc_insertion_point(field_get:OpenFileResponse.blockInfo)
  return blockinfo_.Get(index);
}
inline ::BlockLocations* OpenFileResponse::mutable_blockinfo(int index) {
  // @@protoc_insertion_point(field_mutable:OpenFileResponse.blockInfo)
  return blockinfo_.Mutable(index);
}
inline ::BlockLocations* OpenFileResponse::add_blockinfo() {
  // @@protoc_insertion_point(field_add:OpenFileResponse.blockInfo)
  return blockinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BlockLocations >&
OpenFileResponse::blockinfo() const {
  // @@protoc_insertion_point(field_list:OpenFileResponse.blockInfo)
  return blockinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::BlockLocations >*
OpenFileResponse::mutable_blockinfo() {
  // @@protoc_insertion_point(field_mutable_list:OpenFileResponse.blockInfo)
  return &blockinfo_;
}

// -------------------------------------------------------------------

// ReadBlockRequest

// optional int32 blockNumber = 1;
inline bool ReadBlockRequest::has_blocknumber() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadBlockRequest::set_has_blocknumber() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReadBlockRequest::clear_has_blocknumber() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReadBlockRequest::clear_blocknumber() {
  blocknumber_ = 0;
  clear_has_blocknumber();
}
inline ::google::protobuf::int32 ReadBlockRequest::blocknumber() const {
  // @@protoc_insertion_point(field_get:ReadBlockRequest.blockNumber)
  return blocknumber_;
}
inline void ReadBlockRequest::set_blocknumber(::google::protobuf::int32 value) {
  set_has_blocknumber();
  blocknumber_ = value;
  // @@protoc_insertion_point(field_set:ReadBlockRequest.blockNumber)
}

// -------------------------------------------------------------------

// ReadBlockResponse

// optional int32 status = 1;
inline bool ReadBlockResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadBlockResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReadBlockResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReadBlockResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 ReadBlockResponse::status() const {
  // @@protoc_insertion_point(field_get:ReadBlockResponse.status)
  return status_;
}
inline void ReadBlockResponse::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ReadBlockResponse.status)
}

// repeated bytes data = 2;
inline int ReadBlockResponse::data_size() const {
  return data_.size();
}
inline void ReadBlockResponse::clear_data() {
  data_.Clear();
}
inline const ::std::string& ReadBlockResponse::data(int index) const {
  // @@protoc_insertion_point(field_get:ReadBlockResponse.data)
  return data_.Get(index);
}
inline ::std::string* ReadBlockResponse::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:ReadBlockResponse.data)
  return data_.Mutable(index);
}
inline void ReadBlockResponse::set_data(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ReadBlockResponse.data)
  data_.Mutable(index)->assign(value);
}
inline void ReadBlockResponse::set_data(int index, const char* value) {
  data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ReadBlockResponse.data)
}
inline void ReadBlockResponse::set_data(int index, const void* value, size_t size) {
  data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ReadBlockResponse.data)
}
inline ::std::string* ReadBlockResponse::add_data() {
  return data_.Add();
}
inline void ReadBlockResponse::add_data(const ::std::string& value) {
  data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ReadBlockResponse.data)
}
inline void ReadBlockResponse::add_data(const char* value) {
  data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ReadBlockResponse.data)
}
inline void ReadBlockResponse::add_data(const void* value, size_t size) {
  data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ReadBlockResponse.data)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ReadBlockResponse::data() const {
  // @@protoc_insertion_point(field_list:ReadBlockResponse.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ReadBlockResponse::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:ReadBlockResponse.data)
  return &data_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_project_2eproto__INCLUDED
