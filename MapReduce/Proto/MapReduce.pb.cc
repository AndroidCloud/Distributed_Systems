// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MapReduce.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MapReduce.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* JobSubmitRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JobSubmitRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* JobSubmitResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JobSubmitResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* JobStatusRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JobStatusRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* JobStatusResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JobStatusResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* MapTaskStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MapTaskStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReduceTaskStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReduceTaskStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeartBeatRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeartBeatRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MapTaskInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MapTaskInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReducerTaskInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReducerTaskInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReducerInputFileRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReducerInputFileRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReducerInputFileResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReducerInputFileResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeartBeatResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeartBeatResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MapReduce_2eproto() {
  protobuf_AddDesc_MapReduce_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MapReduce.proto");
  GOOGLE_CHECK(file != NULL);
  JobSubmitRequest_descriptor_ = file->message_type(0);
  static const int JobSubmitRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobSubmitRequest, mapname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobSubmitRequest, reducername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobSubmitRequest, inputfile_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobSubmitRequest, outputfile_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobSubmitRequest, numreducetasks_),
  };
  JobSubmitRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JobSubmitRequest_descriptor_,
      JobSubmitRequest::default_instance_,
      JobSubmitRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobSubmitRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobSubmitRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JobSubmitRequest));
  JobSubmitResponse_descriptor_ = file->message_type(1);
  static const int JobSubmitResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobSubmitResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobSubmitResponse, jobid_),
  };
  JobSubmitResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JobSubmitResponse_descriptor_,
      JobSubmitResponse::default_instance_,
      JobSubmitResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobSubmitResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobSubmitResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JobSubmitResponse));
  JobStatusRequest_descriptor_ = file->message_type(2);
  static const int JobStatusRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobStatusRequest, jobid_),
  };
  JobStatusRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JobStatusRequest_descriptor_,
      JobStatusRequest::default_instance_,
      JobStatusRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobStatusRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobStatusRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JobStatusRequest));
  JobStatusResponse_descriptor_ = file->message_type(3);
  static const int JobStatusResponse_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobStatusResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobStatusResponse, jobdone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobStatusResponse, totalmaptasks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobStatusResponse, nummaptasksstarted_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobStatusResponse, totalreducetasks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobStatusResponse, numreducetasksstarted_),
  };
  JobStatusResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JobStatusResponse_descriptor_,
      JobStatusResponse::default_instance_,
      JobStatusResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobStatusResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobStatusResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JobStatusResponse));
  MapTaskStatus_descriptor_ = file->message_type(4);
  static const int MapTaskStatus_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapTaskStatus, jobid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapTaskStatus, taskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapTaskStatus, taskcompleted_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapTaskStatus, mapoutputfile_),
  };
  MapTaskStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MapTaskStatus_descriptor_,
      MapTaskStatus::default_instance_,
      MapTaskStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapTaskStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapTaskStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MapTaskStatus));
  ReduceTaskStatus_descriptor_ = file->message_type(5);
  static const int ReduceTaskStatus_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReduceTaskStatus, jobid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReduceTaskStatus, taskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReduceTaskStatus, taskcompleted_),
  };
  ReduceTaskStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReduceTaskStatus_descriptor_,
      ReduceTaskStatus::default_instance_,
      ReduceTaskStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReduceTaskStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReduceTaskStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReduceTaskStatus));
  HeartBeatRequest_descriptor_ = file->message_type(6);
  static const int HeartBeatRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatRequest, tasktrackerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatRequest, nummapslotsfree_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatRequest, numreduceslotsfree_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatRequest, mapstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatRequest, reducestatus_),
  };
  HeartBeatRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeartBeatRequest_descriptor_,
      HeartBeatRequest::default_instance_,
      HeartBeatRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeartBeatRequest));
  MapTaskInfo_descriptor_ = file->message_type(7);
  static const int MapTaskInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapTaskInfo, jobid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapTaskInfo, numreducetasks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapTaskInfo, mapname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapTaskInfo, inputblocks_),
  };
  MapTaskInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MapTaskInfo_descriptor_,
      MapTaskInfo::default_instance_,
      MapTaskInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapTaskInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapTaskInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MapTaskInfo));
  ReducerTaskInfo_descriptor_ = file->message_type(8);
  static const int ReducerTaskInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReducerTaskInfo, jobid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReducerTaskInfo, taskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReducerTaskInfo, reducername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReducerTaskInfo, reducernumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReducerTaskInfo, ownip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReducerTaskInfo, mapoutputlocation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReducerTaskInfo, outputfile_),
  };
  ReducerTaskInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReducerTaskInfo_descriptor_,
      ReducerTaskInfo::default_instance_,
      ReducerTaskInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReducerTaskInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReducerTaskInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReducerTaskInfo));
  ReducerInputFileRequest_descriptor_ = file->message_type(9);
  static const int ReducerInputFileRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReducerInputFileRequest, filename_),
  };
  ReducerInputFileRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReducerInputFileRequest_descriptor_,
      ReducerInputFileRequest::default_instance_,
      ReducerInputFileRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReducerInputFileRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReducerInputFileRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReducerInputFileRequest));
  ReducerInputFileResponse_descriptor_ = file->message_type(10);
  static const int ReducerInputFileResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReducerInputFileResponse, fileline_),
  };
  ReducerInputFileResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReducerInputFileResponse_descriptor_,
      ReducerInputFileResponse::default_instance_,
      ReducerInputFileResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReducerInputFileResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReducerInputFileResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReducerInputFileResponse));
  HeartBeatResponse_descriptor_ = file->message_type(11);
  static const int HeartBeatResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatResponse, maptasks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatResponse, reducetasks_),
  };
  HeartBeatResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeartBeatResponse_descriptor_,
      HeartBeatResponse::default_instance_,
      HeartBeatResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeartBeatResponse));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MapReduce_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JobSubmitRequest_descriptor_, &JobSubmitRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JobSubmitResponse_descriptor_, &JobSubmitResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JobStatusRequest_descriptor_, &JobStatusRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JobStatusResponse_descriptor_, &JobStatusResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MapTaskStatus_descriptor_, &MapTaskStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReduceTaskStatus_descriptor_, &ReduceTaskStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeartBeatRequest_descriptor_, &HeartBeatRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MapTaskInfo_descriptor_, &MapTaskInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReducerTaskInfo_descriptor_, &ReducerTaskInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReducerInputFileRequest_descriptor_, &ReducerInputFileRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReducerInputFileResponse_descriptor_, &ReducerInputFileResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeartBeatResponse_descriptor_, &HeartBeatResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MapReduce_2eproto() {
  delete JobSubmitRequest::default_instance_;
  delete JobSubmitRequest_reflection_;
  delete JobSubmitResponse::default_instance_;
  delete JobSubmitResponse_reflection_;
  delete JobStatusRequest::default_instance_;
  delete JobStatusRequest_reflection_;
  delete JobStatusResponse::default_instance_;
  delete JobStatusResponse_reflection_;
  delete MapTaskStatus::default_instance_;
  delete MapTaskStatus_reflection_;
  delete ReduceTaskStatus::default_instance_;
  delete ReduceTaskStatus_reflection_;
  delete HeartBeatRequest::default_instance_;
  delete HeartBeatRequest_reflection_;
  delete MapTaskInfo::default_instance_;
  delete MapTaskInfo_reflection_;
  delete ReducerTaskInfo::default_instance_;
  delete ReducerTaskInfo_reflection_;
  delete ReducerInputFileRequest::default_instance_;
  delete ReducerInputFileRequest_reflection_;
  delete ReducerInputFileResponse::default_instance_;
  delete ReducerInputFileResponse_reflection_;
  delete HeartBeatResponse::default_instance_;
  delete HeartBeatResponse_reflection_;
}

void protobuf_AddDesc_MapReduce_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017MapReduce.proto\"w\n\020JobSubmitRequest\022\017\n"
    "\007mapName\030\001 \001(\t\022\023\n\013reducerName\030\002 \001(\t\022\021\n\ti"
    "nputFile\030\003 \001(\t\022\022\n\noutputFile\030\004 \001(\t\022\026\n\016nu"
    "mReduceTasks\030\005 \001(\005\"2\n\021JobSubmitResponse\022"
    "\016\n\006status\030\001 \001(\005\022\r\n\005jobId\030\002 \001(\005\"!\n\020JobSta"
    "tusRequest\022\r\n\005jobId\030\001 \001(\005\"\240\001\n\021JobStatusR"
    "esponse\022\016\n\006status\030\001 \001(\005\022\017\n\007jobDone\030\002 \001(\010"
    "\022\025\n\rtotalMapTasks\030\003 \001(\005\022\032\n\022numMapTasksSt"
    "arted\030\004 \001(\005\022\030\n\020totalReduceTasks\030\005 \001(\005\022\035\n"
    "\025numReduceTasksStarted\030\006 \001(\005\"\\\n\rMapTaskS"
    "tatus\022\r\n\005jobId\030\001 \001(\005\022\016\n\006taskId\030\002 \001(\005\022\025\n\r"
    "taskCompleted\030\003 \001(\010\022\025\n\rmapOutputFile\030\004 \001"
    "(\t\"H\n\020ReduceTaskStatus\022\r\n\005jobId\030\001 \001(\005\022\016\n"
    "\006taskId\030\002 \001(\005\022\025\n\rtaskCompleted\030\003 \001(\010\"\252\001\n"
    "\020HeartBeatRequest\022\025\n\rtaskTrackerId\030\001 \001(\005"
    "\022\027\n\017numMapSlotsFree\030\002 \001(\005\022\032\n\022numReduceSl"
    "otsFree\030\003 \001(\005\022!\n\tmapStatus\030\004 \003(\0132\016.MapTa"
    "skStatus\022\'\n\014reduceStatus\030\005 \003(\0132\021.ReduceT"
    "askStatus\"Z\n\013MapTaskInfo\022\r\n\005jobId\030\001 \001(\005\022"
    "\026\n\016numReduceTasks\030\003 \001(\005\022\017\n\007mapName\030\004 \001(\t"
    "\022\023\n\013inputBlocks\030\005 \003(\005\"\232\001\n\017ReducerTaskInf"
    "o\022\r\n\005jobId\030\001 \001(\005\022\016\n\006taskId\030\002 \001(\005\022\023\n\013redu"
    "cerName\030\003 \001(\t\022\025\n\rreducerNumber\030\004 \001(\005\022\r\n\005"
    "ownIp\030\005 \001(\t\022\031\n\021mapOutputLocation\030\006 \003(\t\022\022"
    "\n\noutputFile\030\007 \001(\t\"+\n\027ReducerInputFileRe"
    "quest\022\020\n\010filename\030\001 \001(\t\",\n\030ReducerInputF"
    "ileResponse\022\020\n\010fileline\030\001 \003(\t\"j\n\021HeartBe"
    "atResponse\022\016\n\006status\030\001 \001(\005\022\036\n\010mapTasks\030\002"
    " \003(\0132\014.MapTaskInfo\022%\n\013reduceTasks\030\003 \003(\0132"
    "\020.ReducerTaskInfo", 1177);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MapReduce.proto", &protobuf_RegisterTypes);
  JobSubmitRequest::default_instance_ = new JobSubmitRequest();
  JobSubmitResponse::default_instance_ = new JobSubmitResponse();
  JobStatusRequest::default_instance_ = new JobStatusRequest();
  JobStatusResponse::default_instance_ = new JobStatusResponse();
  MapTaskStatus::default_instance_ = new MapTaskStatus();
  ReduceTaskStatus::default_instance_ = new ReduceTaskStatus();
  HeartBeatRequest::default_instance_ = new HeartBeatRequest();
  MapTaskInfo::default_instance_ = new MapTaskInfo();
  ReducerTaskInfo::default_instance_ = new ReducerTaskInfo();
  ReducerInputFileRequest::default_instance_ = new ReducerInputFileRequest();
  ReducerInputFileResponse::default_instance_ = new ReducerInputFileResponse();
  HeartBeatResponse::default_instance_ = new HeartBeatResponse();
  JobSubmitRequest::default_instance_->InitAsDefaultInstance();
  JobSubmitResponse::default_instance_->InitAsDefaultInstance();
  JobStatusRequest::default_instance_->InitAsDefaultInstance();
  JobStatusResponse::default_instance_->InitAsDefaultInstance();
  MapTaskStatus::default_instance_->InitAsDefaultInstance();
  ReduceTaskStatus::default_instance_->InitAsDefaultInstance();
  HeartBeatRequest::default_instance_->InitAsDefaultInstance();
  MapTaskInfo::default_instance_->InitAsDefaultInstance();
  ReducerTaskInfo::default_instance_->InitAsDefaultInstance();
  ReducerInputFileRequest::default_instance_->InitAsDefaultInstance();
  ReducerInputFileResponse::default_instance_->InitAsDefaultInstance();
  HeartBeatResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MapReduce_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MapReduce_2eproto {
  StaticDescriptorInitializer_MapReduce_2eproto() {
    protobuf_AddDesc_MapReduce_2eproto();
  }
} static_descriptor_initializer_MapReduce_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int JobSubmitRequest::kMapNameFieldNumber;
const int JobSubmitRequest::kReducerNameFieldNumber;
const int JobSubmitRequest::kInputFileFieldNumber;
const int JobSubmitRequest::kOutputFileFieldNumber;
const int JobSubmitRequest::kNumReduceTasksFieldNumber;
#endif  // !_MSC_VER

JobSubmitRequest::JobSubmitRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JobSubmitRequest)
}

void JobSubmitRequest::InitAsDefaultInstance() {
}

JobSubmitRequest::JobSubmitRequest(const JobSubmitRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:JobSubmitRequest)
}

void JobSubmitRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  mapname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reducername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inputfile_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  outputfile_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  numreducetasks_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JobSubmitRequest::~JobSubmitRequest() {
  // @@protoc_insertion_point(destructor:JobSubmitRequest)
  SharedDtor();
}

void JobSubmitRequest::SharedDtor() {
  if (mapname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mapname_;
  }
  if (reducername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reducername_;
  }
  if (inputfile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete inputfile_;
  }
  if (outputfile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete outputfile_;
  }
  if (this != default_instance_) {
  }
}

void JobSubmitRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobSubmitRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JobSubmitRequest_descriptor_;
}

const JobSubmitRequest& JobSubmitRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MapReduce_2eproto();
  return *default_instance_;
}

JobSubmitRequest* JobSubmitRequest::default_instance_ = NULL;

JobSubmitRequest* JobSubmitRequest::New() const {
  return new JobSubmitRequest;
}

void JobSubmitRequest::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    if (has_mapname()) {
      if (mapname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        mapname_->clear();
      }
    }
    if (has_reducername()) {
      if (reducername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        reducername_->clear();
      }
    }
    if (has_inputfile()) {
      if (inputfile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        inputfile_->clear();
      }
    }
    if (has_outputfile()) {
      if (outputfile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        outputfile_->clear();
      }
    }
    numreducetasks_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool JobSubmitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:JobSubmitRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string mapName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mapname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mapname().data(), this->mapname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mapname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_reducerName;
        break;
      }

      // optional string reducerName = 2;
      case 2: {
        if (tag == 18) {
         parse_reducerName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reducername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reducername().data(), this->reducername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "reducername");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_inputFile;
        break;
      }

      // optional string inputFile = 3;
      case 3: {
        if (tag == 26) {
         parse_inputFile:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inputfile()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->inputfile().data(), this->inputfile().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "inputfile");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_outputFile;
        break;
      }

      // optional string outputFile = 4;
      case 4: {
        if (tag == 34) {
         parse_outputFile:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_outputfile()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->outputfile().data(), this->outputfile().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "outputfile");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_numReduceTasks;
        break;
      }

      // optional int32 numReduceTasks = 5;
      case 5: {
        if (tag == 40) {
         parse_numReduceTasks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numreducetasks_)));
          set_has_numreducetasks();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JobSubmitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JobSubmitRequest)
  return false;
#undef DO_
}

void JobSubmitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JobSubmitRequest)
  // optional string mapName = 1;
  if (has_mapname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mapname().data(), this->mapname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mapname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mapname(), output);
  }

  // optional string reducerName = 2;
  if (has_reducername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reducername().data(), this->reducername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "reducername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reducername(), output);
  }

  // optional string inputFile = 3;
  if (has_inputfile()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->inputfile().data(), this->inputfile().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inputfile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->inputfile(), output);
  }

  // optional string outputFile = 4;
  if (has_outputfile()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->outputfile().data(), this->outputfile().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "outputfile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->outputfile(), output);
  }

  // optional int32 numReduceTasks = 5;
  if (has_numreducetasks()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->numreducetasks(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:JobSubmitRequest)
}

::google::protobuf::uint8* JobSubmitRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:JobSubmitRequest)
  // optional string mapName = 1;
  if (has_mapname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mapname().data(), this->mapname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mapname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mapname(), target);
  }

  // optional string reducerName = 2;
  if (has_reducername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reducername().data(), this->reducername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "reducername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reducername(), target);
  }

  // optional string inputFile = 3;
  if (has_inputfile()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->inputfile().data(), this->inputfile().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inputfile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->inputfile(), target);
  }

  // optional string outputFile = 4;
  if (has_outputfile()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->outputfile().data(), this->outputfile().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "outputfile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->outputfile(), target);
  }

  // optional int32 numReduceTasks = 5;
  if (has_numreducetasks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->numreducetasks(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JobSubmitRequest)
  return target;
}

int JobSubmitRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string mapName = 1;
    if (has_mapname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mapname());
    }

    // optional string reducerName = 2;
    if (has_reducername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reducername());
    }

    // optional string inputFile = 3;
    if (has_inputfile()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->inputfile());
    }

    // optional string outputFile = 4;
    if (has_outputfile()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->outputfile());
    }

    // optional int32 numReduceTasks = 5;
    if (has_numreducetasks()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->numreducetasks());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobSubmitRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const JobSubmitRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JobSubmitRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JobSubmitRequest::MergeFrom(const JobSubmitRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mapname()) {
      set_mapname(from.mapname());
    }
    if (from.has_reducername()) {
      set_reducername(from.reducername());
    }
    if (from.has_inputfile()) {
      set_inputfile(from.inputfile());
    }
    if (from.has_outputfile()) {
      set_outputfile(from.outputfile());
    }
    if (from.has_numreducetasks()) {
      set_numreducetasks(from.numreducetasks());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void JobSubmitRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobSubmitRequest::CopyFrom(const JobSubmitRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobSubmitRequest::IsInitialized() const {

  return true;
}

void JobSubmitRequest::Swap(JobSubmitRequest* other) {
  if (other != this) {
    std::swap(mapname_, other->mapname_);
    std::swap(reducername_, other->reducername_);
    std::swap(inputfile_, other->inputfile_);
    std::swap(outputfile_, other->outputfile_);
    std::swap(numreducetasks_, other->numreducetasks_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata JobSubmitRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JobSubmitRequest_descriptor_;
  metadata.reflection = JobSubmitRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int JobSubmitResponse::kStatusFieldNumber;
const int JobSubmitResponse::kJobIdFieldNumber;
#endif  // !_MSC_VER

JobSubmitResponse::JobSubmitResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JobSubmitResponse)
}

void JobSubmitResponse::InitAsDefaultInstance() {
}

JobSubmitResponse::JobSubmitResponse(const JobSubmitResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:JobSubmitResponse)
}

void JobSubmitResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  jobid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JobSubmitResponse::~JobSubmitResponse() {
  // @@protoc_insertion_point(destructor:JobSubmitResponse)
  SharedDtor();
}

void JobSubmitResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void JobSubmitResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobSubmitResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JobSubmitResponse_descriptor_;
}

const JobSubmitResponse& JobSubmitResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MapReduce_2eproto();
  return *default_instance_;
}

JobSubmitResponse* JobSubmitResponse::default_instance_ = NULL;

JobSubmitResponse* JobSubmitResponse::New() const {
  return new JobSubmitResponse;
}

void JobSubmitResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<JobSubmitResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(status_, jobid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool JobSubmitResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:JobSubmitResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_jobId;
        break;
      }

      // optional int32 jobId = 2;
      case 2: {
        if (tag == 16) {
         parse_jobId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jobid_)));
          set_has_jobid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JobSubmitResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JobSubmitResponse)
  return false;
#undef DO_
}

void JobSubmitResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JobSubmitResponse)
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // optional int32 jobId = 2;
  if (has_jobid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->jobid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:JobSubmitResponse)
}

::google::protobuf::uint8* JobSubmitResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:JobSubmitResponse)
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // optional int32 jobId = 2;
  if (has_jobid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->jobid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JobSubmitResponse)
  return target;
}

int JobSubmitResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

    // optional int32 jobId = 2;
    if (has_jobid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jobid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobSubmitResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const JobSubmitResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JobSubmitResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JobSubmitResponse::MergeFrom(const JobSubmitResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_jobid()) {
      set_jobid(from.jobid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void JobSubmitResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobSubmitResponse::CopyFrom(const JobSubmitResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobSubmitResponse::IsInitialized() const {

  return true;
}

void JobSubmitResponse::Swap(JobSubmitResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(jobid_, other->jobid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata JobSubmitResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JobSubmitResponse_descriptor_;
  metadata.reflection = JobSubmitResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int JobStatusRequest::kJobIdFieldNumber;
#endif  // !_MSC_VER

JobStatusRequest::JobStatusRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JobStatusRequest)
}

void JobStatusRequest::InitAsDefaultInstance() {
}

JobStatusRequest::JobStatusRequest(const JobStatusRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:JobStatusRequest)
}

void JobStatusRequest::SharedCtor() {
  _cached_size_ = 0;
  jobid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JobStatusRequest::~JobStatusRequest() {
  // @@protoc_insertion_point(destructor:JobStatusRequest)
  SharedDtor();
}

void JobStatusRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void JobStatusRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobStatusRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JobStatusRequest_descriptor_;
}

const JobStatusRequest& JobStatusRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MapReduce_2eproto();
  return *default_instance_;
}

JobStatusRequest* JobStatusRequest::default_instance_ = NULL;

JobStatusRequest* JobStatusRequest::New() const {
  return new JobStatusRequest;
}

void JobStatusRequest::Clear() {
  jobid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool JobStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:JobStatusRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 jobId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jobid_)));
          set_has_jobid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JobStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JobStatusRequest)
  return false;
#undef DO_
}

void JobStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JobStatusRequest)
  // optional int32 jobId = 1;
  if (has_jobid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->jobid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:JobStatusRequest)
}

::google::protobuf::uint8* JobStatusRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:JobStatusRequest)
  // optional int32 jobId = 1;
  if (has_jobid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->jobid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JobStatusRequest)
  return target;
}

int JobStatusRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 jobId = 1;
    if (has_jobid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jobid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const JobStatusRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JobStatusRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JobStatusRequest::MergeFrom(const JobStatusRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_jobid()) {
      set_jobid(from.jobid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void JobStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobStatusRequest::CopyFrom(const JobStatusRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobStatusRequest::IsInitialized() const {

  return true;
}

void JobStatusRequest::Swap(JobStatusRequest* other) {
  if (other != this) {
    std::swap(jobid_, other->jobid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata JobStatusRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JobStatusRequest_descriptor_;
  metadata.reflection = JobStatusRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int JobStatusResponse::kStatusFieldNumber;
const int JobStatusResponse::kJobDoneFieldNumber;
const int JobStatusResponse::kTotalMapTasksFieldNumber;
const int JobStatusResponse::kNumMapTasksStartedFieldNumber;
const int JobStatusResponse::kTotalReduceTasksFieldNumber;
const int JobStatusResponse::kNumReduceTasksStartedFieldNumber;
#endif  // !_MSC_VER

JobStatusResponse::JobStatusResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JobStatusResponse)
}

void JobStatusResponse::InitAsDefaultInstance() {
}

JobStatusResponse::JobStatusResponse(const JobStatusResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:JobStatusResponse)
}

void JobStatusResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  jobdone_ = false;
  totalmaptasks_ = 0;
  nummaptasksstarted_ = 0;
  totalreducetasks_ = 0;
  numreducetasksstarted_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JobStatusResponse::~JobStatusResponse() {
  // @@protoc_insertion_point(destructor:JobStatusResponse)
  SharedDtor();
}

void JobStatusResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void JobStatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobStatusResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JobStatusResponse_descriptor_;
}

const JobStatusResponse& JobStatusResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MapReduce_2eproto();
  return *default_instance_;
}

JobStatusResponse* JobStatusResponse::default_instance_ = NULL;

JobStatusResponse* JobStatusResponse::New() const {
  return new JobStatusResponse;
}

void JobStatusResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<JobStatusResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(status_, numreducetasksstarted_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool JobStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:JobStatusResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_jobDone;
        break;
      }

      // optional bool jobDone = 2;
      case 2: {
        if (tag == 16) {
         parse_jobDone:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &jobdone_)));
          set_has_jobdone();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_totalMapTasks;
        break;
      }

      // optional int32 totalMapTasks = 3;
      case 3: {
        if (tag == 24) {
         parse_totalMapTasks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &totalmaptasks_)));
          set_has_totalmaptasks();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_numMapTasksStarted;
        break;
      }

      // optional int32 numMapTasksStarted = 4;
      case 4: {
        if (tag == 32) {
         parse_numMapTasksStarted:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nummaptasksstarted_)));
          set_has_nummaptasksstarted();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_totalReduceTasks;
        break;
      }

      // optional int32 totalReduceTasks = 5;
      case 5: {
        if (tag == 40) {
         parse_totalReduceTasks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &totalreducetasks_)));
          set_has_totalreducetasks();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_numReduceTasksStarted;
        break;
      }

      // optional int32 numReduceTasksStarted = 6;
      case 6: {
        if (tag == 48) {
         parse_numReduceTasksStarted:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numreducetasksstarted_)));
          set_has_numreducetasksstarted();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JobStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JobStatusResponse)
  return false;
#undef DO_
}

void JobStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JobStatusResponse)
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // optional bool jobDone = 2;
  if (has_jobdone()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->jobdone(), output);
  }

  // optional int32 totalMapTasks = 3;
  if (has_totalmaptasks()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->totalmaptasks(), output);
  }

  // optional int32 numMapTasksStarted = 4;
  if (has_nummaptasksstarted()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->nummaptasksstarted(), output);
  }

  // optional int32 totalReduceTasks = 5;
  if (has_totalreducetasks()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->totalreducetasks(), output);
  }

  // optional int32 numReduceTasksStarted = 6;
  if (has_numreducetasksstarted()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->numreducetasksstarted(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:JobStatusResponse)
}

::google::protobuf::uint8* JobStatusResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:JobStatusResponse)
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // optional bool jobDone = 2;
  if (has_jobdone()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->jobdone(), target);
  }

  // optional int32 totalMapTasks = 3;
  if (has_totalmaptasks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->totalmaptasks(), target);
  }

  // optional int32 numMapTasksStarted = 4;
  if (has_nummaptasksstarted()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->nummaptasksstarted(), target);
  }

  // optional int32 totalReduceTasks = 5;
  if (has_totalreducetasks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->totalreducetasks(), target);
  }

  // optional int32 numReduceTasksStarted = 6;
  if (has_numreducetasksstarted()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->numreducetasksstarted(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JobStatusResponse)
  return target;
}

int JobStatusResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

    // optional bool jobDone = 2;
    if (has_jobdone()) {
      total_size += 1 + 1;
    }

    // optional int32 totalMapTasks = 3;
    if (has_totalmaptasks()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->totalmaptasks());
    }

    // optional int32 numMapTasksStarted = 4;
    if (has_nummaptasksstarted()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nummaptasksstarted());
    }

    // optional int32 totalReduceTasks = 5;
    if (has_totalreducetasks()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->totalreducetasks());
    }

    // optional int32 numReduceTasksStarted = 6;
    if (has_numreducetasksstarted()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->numreducetasksstarted());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const JobStatusResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JobStatusResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JobStatusResponse::MergeFrom(const JobStatusResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_jobdone()) {
      set_jobdone(from.jobdone());
    }
    if (from.has_totalmaptasks()) {
      set_totalmaptasks(from.totalmaptasks());
    }
    if (from.has_nummaptasksstarted()) {
      set_nummaptasksstarted(from.nummaptasksstarted());
    }
    if (from.has_totalreducetasks()) {
      set_totalreducetasks(from.totalreducetasks());
    }
    if (from.has_numreducetasksstarted()) {
      set_numreducetasksstarted(from.numreducetasksstarted());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void JobStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobStatusResponse::CopyFrom(const JobStatusResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobStatusResponse::IsInitialized() const {

  return true;
}

void JobStatusResponse::Swap(JobStatusResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(jobdone_, other->jobdone_);
    std::swap(totalmaptasks_, other->totalmaptasks_);
    std::swap(nummaptasksstarted_, other->nummaptasksstarted_);
    std::swap(totalreducetasks_, other->totalreducetasks_);
    std::swap(numreducetasksstarted_, other->numreducetasksstarted_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata JobStatusResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JobStatusResponse_descriptor_;
  metadata.reflection = JobStatusResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MapTaskStatus::kJobIdFieldNumber;
const int MapTaskStatus::kTaskIdFieldNumber;
const int MapTaskStatus::kTaskCompletedFieldNumber;
const int MapTaskStatus::kMapOutputFileFieldNumber;
#endif  // !_MSC_VER

MapTaskStatus::MapTaskStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MapTaskStatus)
}

void MapTaskStatus::InitAsDefaultInstance() {
}

MapTaskStatus::MapTaskStatus(const MapTaskStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MapTaskStatus)
}

void MapTaskStatus::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  jobid_ = 0;
  taskid_ = 0;
  taskcompleted_ = false;
  mapoutputfile_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MapTaskStatus::~MapTaskStatus() {
  // @@protoc_insertion_point(destructor:MapTaskStatus)
  SharedDtor();
}

void MapTaskStatus::SharedDtor() {
  if (mapoutputfile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mapoutputfile_;
  }
  if (this != default_instance_) {
  }
}

void MapTaskStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MapTaskStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MapTaskStatus_descriptor_;
}

const MapTaskStatus& MapTaskStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MapReduce_2eproto();
  return *default_instance_;
}

MapTaskStatus* MapTaskStatus::default_instance_ = NULL;

MapTaskStatus* MapTaskStatus::New() const {
  return new MapTaskStatus;
}

void MapTaskStatus::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MapTaskStatus*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(jobid_, taskid_);
    taskcompleted_ = false;
    if (has_mapoutputfile()) {
      if (mapoutputfile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        mapoutputfile_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MapTaskStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MapTaskStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 jobId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jobid_)));
          set_has_jobid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_taskId;
        break;
      }

      // optional int32 taskId = 2;
      case 2: {
        if (tag == 16) {
         parse_taskId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &taskid_)));
          set_has_taskid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_taskCompleted;
        break;
      }

      // optional bool taskCompleted = 3;
      case 3: {
        if (tag == 24) {
         parse_taskCompleted:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &taskcompleted_)));
          set_has_taskcompleted();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_mapOutputFile;
        break;
      }

      // optional string mapOutputFile = 4;
      case 4: {
        if (tag == 34) {
         parse_mapOutputFile:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mapoutputfile()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mapoutputfile().data(), this->mapoutputfile().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mapoutputfile");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MapTaskStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MapTaskStatus)
  return false;
#undef DO_
}

void MapTaskStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MapTaskStatus)
  // optional int32 jobId = 1;
  if (has_jobid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->jobid(), output);
  }

  // optional int32 taskId = 2;
  if (has_taskid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->taskid(), output);
  }

  // optional bool taskCompleted = 3;
  if (has_taskcompleted()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->taskcompleted(), output);
  }

  // optional string mapOutputFile = 4;
  if (has_mapoutputfile()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mapoutputfile().data(), this->mapoutputfile().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mapoutputfile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mapoutputfile(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MapTaskStatus)
}

::google::protobuf::uint8* MapTaskStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MapTaskStatus)
  // optional int32 jobId = 1;
  if (has_jobid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->jobid(), target);
  }

  // optional int32 taskId = 2;
  if (has_taskid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->taskid(), target);
  }

  // optional bool taskCompleted = 3;
  if (has_taskcompleted()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->taskcompleted(), target);
  }

  // optional string mapOutputFile = 4;
  if (has_mapoutputfile()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mapoutputfile().data(), this->mapoutputfile().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mapoutputfile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mapoutputfile(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MapTaskStatus)
  return target;
}

int MapTaskStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 jobId = 1;
    if (has_jobid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jobid());
    }

    // optional int32 taskId = 2;
    if (has_taskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->taskid());
    }

    // optional bool taskCompleted = 3;
    if (has_taskcompleted()) {
      total_size += 1 + 1;
    }

    // optional string mapOutputFile = 4;
    if (has_mapoutputfile()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mapoutputfile());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MapTaskStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MapTaskStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MapTaskStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MapTaskStatus::MergeFrom(const MapTaskStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_jobid()) {
      set_jobid(from.jobid());
    }
    if (from.has_taskid()) {
      set_taskid(from.taskid());
    }
    if (from.has_taskcompleted()) {
      set_taskcompleted(from.taskcompleted());
    }
    if (from.has_mapoutputfile()) {
      set_mapoutputfile(from.mapoutputfile());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MapTaskStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapTaskStatus::CopyFrom(const MapTaskStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapTaskStatus::IsInitialized() const {

  return true;
}

void MapTaskStatus::Swap(MapTaskStatus* other) {
  if (other != this) {
    std::swap(jobid_, other->jobid_);
    std::swap(taskid_, other->taskid_);
    std::swap(taskcompleted_, other->taskcompleted_);
    std::swap(mapoutputfile_, other->mapoutputfile_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MapTaskStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MapTaskStatus_descriptor_;
  metadata.reflection = MapTaskStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReduceTaskStatus::kJobIdFieldNumber;
const int ReduceTaskStatus::kTaskIdFieldNumber;
const int ReduceTaskStatus::kTaskCompletedFieldNumber;
#endif  // !_MSC_VER

ReduceTaskStatus::ReduceTaskStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReduceTaskStatus)
}

void ReduceTaskStatus::InitAsDefaultInstance() {
}

ReduceTaskStatus::ReduceTaskStatus(const ReduceTaskStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ReduceTaskStatus)
}

void ReduceTaskStatus::SharedCtor() {
  _cached_size_ = 0;
  jobid_ = 0;
  taskid_ = 0;
  taskcompleted_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReduceTaskStatus::~ReduceTaskStatus() {
  // @@protoc_insertion_point(destructor:ReduceTaskStatus)
  SharedDtor();
}

void ReduceTaskStatus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReduceTaskStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReduceTaskStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReduceTaskStatus_descriptor_;
}

const ReduceTaskStatus& ReduceTaskStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MapReduce_2eproto();
  return *default_instance_;
}

ReduceTaskStatus* ReduceTaskStatus::default_instance_ = NULL;

ReduceTaskStatus* ReduceTaskStatus::New() const {
  return new ReduceTaskStatus;
}

void ReduceTaskStatus::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ReduceTaskStatus*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(jobid_, taskcompleted_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReduceTaskStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReduceTaskStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 jobId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jobid_)));
          set_has_jobid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_taskId;
        break;
      }

      // optional int32 taskId = 2;
      case 2: {
        if (tag == 16) {
         parse_taskId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &taskid_)));
          set_has_taskid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_taskCompleted;
        break;
      }

      // optional bool taskCompleted = 3;
      case 3: {
        if (tag == 24) {
         parse_taskCompleted:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &taskcompleted_)));
          set_has_taskcompleted();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReduceTaskStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReduceTaskStatus)
  return false;
#undef DO_
}

void ReduceTaskStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReduceTaskStatus)
  // optional int32 jobId = 1;
  if (has_jobid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->jobid(), output);
  }

  // optional int32 taskId = 2;
  if (has_taskid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->taskid(), output);
  }

  // optional bool taskCompleted = 3;
  if (has_taskcompleted()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->taskcompleted(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReduceTaskStatus)
}

::google::protobuf::uint8* ReduceTaskStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReduceTaskStatus)
  // optional int32 jobId = 1;
  if (has_jobid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->jobid(), target);
  }

  // optional int32 taskId = 2;
  if (has_taskid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->taskid(), target);
  }

  // optional bool taskCompleted = 3;
  if (has_taskcompleted()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->taskcompleted(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReduceTaskStatus)
  return target;
}

int ReduceTaskStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 jobId = 1;
    if (has_jobid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jobid());
    }

    // optional int32 taskId = 2;
    if (has_taskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->taskid());
    }

    // optional bool taskCompleted = 3;
    if (has_taskcompleted()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReduceTaskStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReduceTaskStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReduceTaskStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReduceTaskStatus::MergeFrom(const ReduceTaskStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_jobid()) {
      set_jobid(from.jobid());
    }
    if (from.has_taskid()) {
      set_taskid(from.taskid());
    }
    if (from.has_taskcompleted()) {
      set_taskcompleted(from.taskcompleted());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReduceTaskStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReduceTaskStatus::CopyFrom(const ReduceTaskStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReduceTaskStatus::IsInitialized() const {

  return true;
}

void ReduceTaskStatus::Swap(ReduceTaskStatus* other) {
  if (other != this) {
    std::swap(jobid_, other->jobid_);
    std::swap(taskid_, other->taskid_);
    std::swap(taskcompleted_, other->taskcompleted_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReduceTaskStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReduceTaskStatus_descriptor_;
  metadata.reflection = ReduceTaskStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeartBeatRequest::kTaskTrackerIdFieldNumber;
const int HeartBeatRequest::kNumMapSlotsFreeFieldNumber;
const int HeartBeatRequest::kNumReduceSlotsFreeFieldNumber;
const int HeartBeatRequest::kMapStatusFieldNumber;
const int HeartBeatRequest::kReduceStatusFieldNumber;
#endif  // !_MSC_VER

HeartBeatRequest::HeartBeatRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HeartBeatRequest)
}

void HeartBeatRequest::InitAsDefaultInstance() {
}

HeartBeatRequest::HeartBeatRequest(const HeartBeatRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HeartBeatRequest)
}

void HeartBeatRequest::SharedCtor() {
  _cached_size_ = 0;
  tasktrackerid_ = 0;
  nummapslotsfree_ = 0;
  numreduceslotsfree_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeartBeatRequest::~HeartBeatRequest() {
  // @@protoc_insertion_point(destructor:HeartBeatRequest)
  SharedDtor();
}

void HeartBeatRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeartBeatRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartBeatRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeartBeatRequest_descriptor_;
}

const HeartBeatRequest& HeartBeatRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MapReduce_2eproto();
  return *default_instance_;
}

HeartBeatRequest* HeartBeatRequest::default_instance_ = NULL;

HeartBeatRequest* HeartBeatRequest::New() const {
  return new HeartBeatRequest;
}

void HeartBeatRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<HeartBeatRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(tasktrackerid_, nummapslotsfree_);
    numreduceslotsfree_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  mapstatus_.Clear();
  reducestatus_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeartBeatRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HeartBeatRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 taskTrackerId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tasktrackerid_)));
          set_has_tasktrackerid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_numMapSlotsFree;
        break;
      }

      // optional int32 numMapSlotsFree = 2;
      case 2: {
        if (tag == 16) {
         parse_numMapSlotsFree:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nummapslotsfree_)));
          set_has_nummapslotsfree();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_numReduceSlotsFree;
        break;
      }

      // optional int32 numReduceSlotsFree = 3;
      case 3: {
        if (tag == 24) {
         parse_numReduceSlotsFree:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numreduceslotsfree_)));
          set_has_numreduceslotsfree();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_mapStatus;
        break;
      }

      // repeated .MapTaskStatus mapStatus = 4;
      case 4: {
        if (tag == 34) {
         parse_mapStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mapstatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_mapStatus;
        if (input->ExpectTag(42)) goto parse_reduceStatus;
        break;
      }

      // repeated .ReduceTaskStatus reduceStatus = 5;
      case 5: {
        if (tag == 42) {
         parse_reduceStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reducestatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_reduceStatus;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HeartBeatRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HeartBeatRequest)
  return false;
#undef DO_
}

void HeartBeatRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HeartBeatRequest)
  // optional int32 taskTrackerId = 1;
  if (has_tasktrackerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tasktrackerid(), output);
  }

  // optional int32 numMapSlotsFree = 2;
  if (has_nummapslotsfree()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nummapslotsfree(), output);
  }

  // optional int32 numReduceSlotsFree = 3;
  if (has_numreduceslotsfree()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->numreduceslotsfree(), output);
  }

  // repeated .MapTaskStatus mapStatus = 4;
  for (int i = 0; i < this->mapstatus_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->mapstatus(i), output);
  }

  // repeated .ReduceTaskStatus reduceStatus = 5;
  for (int i = 0; i < this->reducestatus_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->reducestatus(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HeartBeatRequest)
}

::google::protobuf::uint8* HeartBeatRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HeartBeatRequest)
  // optional int32 taskTrackerId = 1;
  if (has_tasktrackerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tasktrackerid(), target);
  }

  // optional int32 numMapSlotsFree = 2;
  if (has_nummapslotsfree()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nummapslotsfree(), target);
  }

  // optional int32 numReduceSlotsFree = 3;
  if (has_numreduceslotsfree()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->numreduceslotsfree(), target);
  }

  // repeated .MapTaskStatus mapStatus = 4;
  for (int i = 0; i < this->mapstatus_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->mapstatus(i), target);
  }

  // repeated .ReduceTaskStatus reduceStatus = 5;
  for (int i = 0; i < this->reducestatus_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->reducestatus(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HeartBeatRequest)
  return target;
}

int HeartBeatRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 taskTrackerId = 1;
    if (has_tasktrackerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tasktrackerid());
    }

    // optional int32 numMapSlotsFree = 2;
    if (has_nummapslotsfree()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nummapslotsfree());
    }

    // optional int32 numReduceSlotsFree = 3;
    if (has_numreduceslotsfree()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->numreduceslotsfree());
    }

  }
  // repeated .MapTaskStatus mapStatus = 4;
  total_size += 1 * this->mapstatus_size();
  for (int i = 0; i < this->mapstatus_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mapstatus(i));
  }

  // repeated .ReduceTaskStatus reduceStatus = 5;
  total_size += 1 * this->reducestatus_size();
  for (int i = 0; i < this->reducestatus_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reducestatus(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartBeatRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeartBeatRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeartBeatRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeartBeatRequest::MergeFrom(const HeartBeatRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mapstatus_.MergeFrom(from.mapstatus_);
  reducestatus_.MergeFrom(from.reducestatus_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tasktrackerid()) {
      set_tasktrackerid(from.tasktrackerid());
    }
    if (from.has_nummapslotsfree()) {
      set_nummapslotsfree(from.nummapslotsfree());
    }
    if (from.has_numreduceslotsfree()) {
      set_numreduceslotsfree(from.numreduceslotsfree());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeartBeatRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartBeatRequest::CopyFrom(const HeartBeatRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartBeatRequest::IsInitialized() const {

  return true;
}

void HeartBeatRequest::Swap(HeartBeatRequest* other) {
  if (other != this) {
    std::swap(tasktrackerid_, other->tasktrackerid_);
    std::swap(nummapslotsfree_, other->nummapslotsfree_);
    std::swap(numreduceslotsfree_, other->numreduceslotsfree_);
    mapstatus_.Swap(&other->mapstatus_);
    reducestatus_.Swap(&other->reducestatus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeartBeatRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeartBeatRequest_descriptor_;
  metadata.reflection = HeartBeatRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MapTaskInfo::kJobIdFieldNumber;
const int MapTaskInfo::kNumReduceTasksFieldNumber;
const int MapTaskInfo::kMapNameFieldNumber;
const int MapTaskInfo::kInputBlocksFieldNumber;
#endif  // !_MSC_VER

MapTaskInfo::MapTaskInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MapTaskInfo)
}

void MapTaskInfo::InitAsDefaultInstance() {
}

MapTaskInfo::MapTaskInfo(const MapTaskInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MapTaskInfo)
}

void MapTaskInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  jobid_ = 0;
  numreducetasks_ = 0;
  mapname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MapTaskInfo::~MapTaskInfo() {
  // @@protoc_insertion_point(destructor:MapTaskInfo)
  SharedDtor();
}

void MapTaskInfo::SharedDtor() {
  if (mapname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mapname_;
  }
  if (this != default_instance_) {
  }
}

void MapTaskInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MapTaskInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MapTaskInfo_descriptor_;
}

const MapTaskInfo& MapTaskInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MapReduce_2eproto();
  return *default_instance_;
}

MapTaskInfo* MapTaskInfo::default_instance_ = NULL;

MapTaskInfo* MapTaskInfo::New() const {
  return new MapTaskInfo;
}

void MapTaskInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MapTaskInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(jobid_, numreducetasks_);
    if (has_mapname()) {
      if (mapname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        mapname_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  inputblocks_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MapTaskInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MapTaskInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 jobId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jobid_)));
          set_has_jobid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_numReduceTasks;
        break;
      }

      // optional int32 numReduceTasks = 3;
      case 3: {
        if (tag == 24) {
         parse_numReduceTasks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numreducetasks_)));
          set_has_numreducetasks();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_mapName;
        break;
      }

      // optional string mapName = 4;
      case 4: {
        if (tag == 34) {
         parse_mapName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mapname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mapname().data(), this->mapname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mapname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_inputBlocks;
        break;
      }

      // repeated int32 inputBlocks = 5;
      case 5: {
        if (tag == 40) {
         parse_inputBlocks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_inputblocks())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_inputblocks())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_inputBlocks;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MapTaskInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MapTaskInfo)
  return false;
#undef DO_
}

void MapTaskInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MapTaskInfo)
  // optional int32 jobId = 1;
  if (has_jobid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->jobid(), output);
  }

  // optional int32 numReduceTasks = 3;
  if (has_numreducetasks()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->numreducetasks(), output);
  }

  // optional string mapName = 4;
  if (has_mapname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mapname().data(), this->mapname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mapname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mapname(), output);
  }

  // repeated int32 inputBlocks = 5;
  for (int i = 0; i < this->inputblocks_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->inputblocks(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MapTaskInfo)
}

::google::protobuf::uint8* MapTaskInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MapTaskInfo)
  // optional int32 jobId = 1;
  if (has_jobid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->jobid(), target);
  }

  // optional int32 numReduceTasks = 3;
  if (has_numreducetasks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->numreducetasks(), target);
  }

  // optional string mapName = 4;
  if (has_mapname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mapname().data(), this->mapname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mapname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mapname(), target);
  }

  // repeated int32 inputBlocks = 5;
  for (int i = 0; i < this->inputblocks_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->inputblocks(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MapTaskInfo)
  return target;
}

int MapTaskInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 jobId = 1;
    if (has_jobid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jobid());
    }

    // optional int32 numReduceTasks = 3;
    if (has_numreducetasks()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->numreducetasks());
    }

    // optional string mapName = 4;
    if (has_mapname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mapname());
    }

  }
  // repeated int32 inputBlocks = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->inputblocks_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->inputblocks(i));
    }
    total_size += 1 * this->inputblocks_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MapTaskInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MapTaskInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MapTaskInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MapTaskInfo::MergeFrom(const MapTaskInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  inputblocks_.MergeFrom(from.inputblocks_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_jobid()) {
      set_jobid(from.jobid());
    }
    if (from.has_numreducetasks()) {
      set_numreducetasks(from.numreducetasks());
    }
    if (from.has_mapname()) {
      set_mapname(from.mapname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MapTaskInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapTaskInfo::CopyFrom(const MapTaskInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapTaskInfo::IsInitialized() const {

  return true;
}

void MapTaskInfo::Swap(MapTaskInfo* other) {
  if (other != this) {
    std::swap(jobid_, other->jobid_);
    std::swap(numreducetasks_, other->numreducetasks_);
    std::swap(mapname_, other->mapname_);
    inputblocks_.Swap(&other->inputblocks_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MapTaskInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MapTaskInfo_descriptor_;
  metadata.reflection = MapTaskInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReducerTaskInfo::kJobIdFieldNumber;
const int ReducerTaskInfo::kTaskIdFieldNumber;
const int ReducerTaskInfo::kReducerNameFieldNumber;
const int ReducerTaskInfo::kReducerNumberFieldNumber;
const int ReducerTaskInfo::kOwnIpFieldNumber;
const int ReducerTaskInfo::kMapOutputLocationFieldNumber;
const int ReducerTaskInfo::kOutputFileFieldNumber;
#endif  // !_MSC_VER

ReducerTaskInfo::ReducerTaskInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReducerTaskInfo)
}

void ReducerTaskInfo::InitAsDefaultInstance() {
}

ReducerTaskInfo::ReducerTaskInfo(const ReducerTaskInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ReducerTaskInfo)
}

void ReducerTaskInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  jobid_ = 0;
  taskid_ = 0;
  reducername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reducernumber_ = 0;
  ownip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  outputfile_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReducerTaskInfo::~ReducerTaskInfo() {
  // @@protoc_insertion_point(destructor:ReducerTaskInfo)
  SharedDtor();
}

void ReducerTaskInfo::SharedDtor() {
  if (reducername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reducername_;
  }
  if (ownip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ownip_;
  }
  if (outputfile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete outputfile_;
  }
  if (this != default_instance_) {
  }
}

void ReducerTaskInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReducerTaskInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReducerTaskInfo_descriptor_;
}

const ReducerTaskInfo& ReducerTaskInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MapReduce_2eproto();
  return *default_instance_;
}

ReducerTaskInfo* ReducerTaskInfo::default_instance_ = NULL;

ReducerTaskInfo* ReducerTaskInfo::New() const {
  return new ReducerTaskInfo;
}

void ReducerTaskInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ReducerTaskInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 95) {
    ZR_(jobid_, taskid_);
    if (has_reducername()) {
      if (reducername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        reducername_->clear();
      }
    }
    reducernumber_ = 0;
    if (has_ownip()) {
      if (ownip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        ownip_->clear();
      }
    }
    if (has_outputfile()) {
      if (outputfile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        outputfile_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  mapoutputlocation_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReducerTaskInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReducerTaskInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 jobId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jobid_)));
          set_has_jobid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_taskId;
        break;
      }

      // optional int32 taskId = 2;
      case 2: {
        if (tag == 16) {
         parse_taskId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &taskid_)));
          set_has_taskid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_reducerName;
        break;
      }

      // optional string reducerName = 3;
      case 3: {
        if (tag == 26) {
         parse_reducerName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reducername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reducername().data(), this->reducername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "reducername");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_reducerNumber;
        break;
      }

      // optional int32 reducerNumber = 4;
      case 4: {
        if (tag == 32) {
         parse_reducerNumber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reducernumber_)));
          set_has_reducernumber();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ownIp;
        break;
      }

      // optional string ownIp = 5;
      case 5: {
        if (tag == 42) {
         parse_ownIp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ownip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ownip().data(), this->ownip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ownip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_mapOutputLocation;
        break;
      }

      // repeated string mapOutputLocation = 6;
      case 6: {
        if (tag == 50) {
         parse_mapOutputLocation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_mapoutputlocation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mapoutputlocation(this->mapoutputlocation_size() - 1).data(),
            this->mapoutputlocation(this->mapoutputlocation_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mapoutputlocation");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_mapOutputLocation;
        if (input->ExpectTag(58)) goto parse_outputFile;
        break;
      }

      // optional string outputFile = 7;
      case 7: {
        if (tag == 58) {
         parse_outputFile:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_outputfile()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->outputfile().data(), this->outputfile().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "outputfile");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReducerTaskInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReducerTaskInfo)
  return false;
#undef DO_
}

void ReducerTaskInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReducerTaskInfo)
  // optional int32 jobId = 1;
  if (has_jobid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->jobid(), output);
  }

  // optional int32 taskId = 2;
  if (has_taskid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->taskid(), output);
  }

  // optional string reducerName = 3;
  if (has_reducername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reducername().data(), this->reducername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "reducername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->reducername(), output);
  }

  // optional int32 reducerNumber = 4;
  if (has_reducernumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->reducernumber(), output);
  }

  // optional string ownIp = 5;
  if (has_ownip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ownip().data(), this->ownip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ownip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->ownip(), output);
  }

  // repeated string mapOutputLocation = 6;
  for (int i = 0; i < this->mapoutputlocation_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->mapoutputlocation(i).data(), this->mapoutputlocation(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "mapoutputlocation");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->mapoutputlocation(i), output);
  }

  // optional string outputFile = 7;
  if (has_outputfile()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->outputfile().data(), this->outputfile().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "outputfile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->outputfile(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReducerTaskInfo)
}

::google::protobuf::uint8* ReducerTaskInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReducerTaskInfo)
  // optional int32 jobId = 1;
  if (has_jobid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->jobid(), target);
  }

  // optional int32 taskId = 2;
  if (has_taskid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->taskid(), target);
  }

  // optional string reducerName = 3;
  if (has_reducername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reducername().data(), this->reducername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "reducername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reducername(), target);
  }

  // optional int32 reducerNumber = 4;
  if (has_reducernumber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->reducernumber(), target);
  }

  // optional string ownIp = 5;
  if (has_ownip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ownip().data(), this->ownip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ownip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->ownip(), target);
  }

  // repeated string mapOutputLocation = 6;
  for (int i = 0; i < this->mapoutputlocation_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mapoutputlocation(i).data(), this->mapoutputlocation(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mapoutputlocation");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->mapoutputlocation(i), target);
  }

  // optional string outputFile = 7;
  if (has_outputfile()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->outputfile().data(), this->outputfile().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "outputfile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->outputfile(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReducerTaskInfo)
  return target;
}

int ReducerTaskInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 jobId = 1;
    if (has_jobid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jobid());
    }

    // optional int32 taskId = 2;
    if (has_taskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->taskid());
    }

    // optional string reducerName = 3;
    if (has_reducername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reducername());
    }

    // optional int32 reducerNumber = 4;
    if (has_reducernumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reducernumber());
    }

    // optional string ownIp = 5;
    if (has_ownip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ownip());
    }

    // optional string outputFile = 7;
    if (has_outputfile()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->outputfile());
    }

  }
  // repeated string mapOutputLocation = 6;
  total_size += 1 * this->mapoutputlocation_size();
  for (int i = 0; i < this->mapoutputlocation_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->mapoutputlocation(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReducerTaskInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReducerTaskInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReducerTaskInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReducerTaskInfo::MergeFrom(const ReducerTaskInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  mapoutputlocation_.MergeFrom(from.mapoutputlocation_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_jobid()) {
      set_jobid(from.jobid());
    }
    if (from.has_taskid()) {
      set_taskid(from.taskid());
    }
    if (from.has_reducername()) {
      set_reducername(from.reducername());
    }
    if (from.has_reducernumber()) {
      set_reducernumber(from.reducernumber());
    }
    if (from.has_ownip()) {
      set_ownip(from.ownip());
    }
    if (from.has_outputfile()) {
      set_outputfile(from.outputfile());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReducerTaskInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReducerTaskInfo::CopyFrom(const ReducerTaskInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReducerTaskInfo::IsInitialized() const {

  return true;
}

void ReducerTaskInfo::Swap(ReducerTaskInfo* other) {
  if (other != this) {
    std::swap(jobid_, other->jobid_);
    std::swap(taskid_, other->taskid_);
    std::swap(reducername_, other->reducername_);
    std::swap(reducernumber_, other->reducernumber_);
    std::swap(ownip_, other->ownip_);
    mapoutputlocation_.Swap(&other->mapoutputlocation_);
    std::swap(outputfile_, other->outputfile_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReducerTaskInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReducerTaskInfo_descriptor_;
  metadata.reflection = ReducerTaskInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReducerInputFileRequest::kFilenameFieldNumber;
#endif  // !_MSC_VER

ReducerInputFileRequest::ReducerInputFileRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReducerInputFileRequest)
}

void ReducerInputFileRequest::InitAsDefaultInstance() {
}

ReducerInputFileRequest::ReducerInputFileRequest(const ReducerInputFileRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ReducerInputFileRequest)
}

void ReducerInputFileRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReducerInputFileRequest::~ReducerInputFileRequest() {
  // @@protoc_insertion_point(destructor:ReducerInputFileRequest)
  SharedDtor();
}

void ReducerInputFileRequest::SharedDtor() {
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filename_;
  }
  if (this != default_instance_) {
  }
}

void ReducerInputFileRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReducerInputFileRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReducerInputFileRequest_descriptor_;
}

const ReducerInputFileRequest& ReducerInputFileRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MapReduce_2eproto();
  return *default_instance_;
}

ReducerInputFileRequest* ReducerInputFileRequest::default_instance_ = NULL;

ReducerInputFileRequest* ReducerInputFileRequest::New() const {
  return new ReducerInputFileRequest;
}

void ReducerInputFileRequest::Clear() {
  if (has_filename()) {
    if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      filename_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReducerInputFileRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReducerInputFileRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filename = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "filename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReducerInputFileRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReducerInputFileRequest)
  return false;
#undef DO_
}

void ReducerInputFileRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReducerInputFileRequest)
  // optional string filename = 1;
  if (has_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReducerInputFileRequest)
}

::google::protobuf::uint8* ReducerInputFileRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReducerInputFileRequest)
  // optional string filename = 1;
  if (has_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReducerInputFileRequest)
  return target;
}

int ReducerInputFileRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string filename = 1;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReducerInputFileRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReducerInputFileRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReducerInputFileRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReducerInputFileRequest::MergeFrom(const ReducerInputFileRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_filename()) {
      set_filename(from.filename());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReducerInputFileRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReducerInputFileRequest::CopyFrom(const ReducerInputFileRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReducerInputFileRequest::IsInitialized() const {

  return true;
}

void ReducerInputFileRequest::Swap(ReducerInputFileRequest* other) {
  if (other != this) {
    std::swap(filename_, other->filename_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReducerInputFileRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReducerInputFileRequest_descriptor_;
  metadata.reflection = ReducerInputFileRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReducerInputFileResponse::kFilelineFieldNumber;
#endif  // !_MSC_VER

ReducerInputFileResponse::ReducerInputFileResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReducerInputFileResponse)
}

void ReducerInputFileResponse::InitAsDefaultInstance() {
}

ReducerInputFileResponse::ReducerInputFileResponse(const ReducerInputFileResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ReducerInputFileResponse)
}

void ReducerInputFileResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReducerInputFileResponse::~ReducerInputFileResponse() {
  // @@protoc_insertion_point(destructor:ReducerInputFileResponse)
  SharedDtor();
}

void ReducerInputFileResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReducerInputFileResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReducerInputFileResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReducerInputFileResponse_descriptor_;
}

const ReducerInputFileResponse& ReducerInputFileResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MapReduce_2eproto();
  return *default_instance_;
}

ReducerInputFileResponse* ReducerInputFileResponse::default_instance_ = NULL;

ReducerInputFileResponse* ReducerInputFileResponse::New() const {
  return new ReducerInputFileResponse;
}

void ReducerInputFileResponse::Clear() {
  fileline_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReducerInputFileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReducerInputFileResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string fileline = 1;
      case 1: {
        if (tag == 10) {
         parse_fileline:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_fileline()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fileline(this->fileline_size() - 1).data(),
            this->fileline(this->fileline_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fileline");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_fileline;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReducerInputFileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReducerInputFileResponse)
  return false;
#undef DO_
}

void ReducerInputFileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReducerInputFileResponse)
  // repeated string fileline = 1;
  for (int i = 0; i < this->fileline_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->fileline(i).data(), this->fileline(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "fileline");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->fileline(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReducerInputFileResponse)
}

::google::protobuf::uint8* ReducerInputFileResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReducerInputFileResponse)
  // repeated string fileline = 1;
  for (int i = 0; i < this->fileline_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fileline(i).data(), this->fileline(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fileline");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->fileline(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReducerInputFileResponse)
  return target;
}

int ReducerInputFileResponse::ByteSize() const {
  int total_size = 0;

  // repeated string fileline = 1;
  total_size += 1 * this->fileline_size();
  for (int i = 0; i < this->fileline_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->fileline(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReducerInputFileResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReducerInputFileResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReducerInputFileResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReducerInputFileResponse::MergeFrom(const ReducerInputFileResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  fileline_.MergeFrom(from.fileline_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReducerInputFileResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReducerInputFileResponse::CopyFrom(const ReducerInputFileResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReducerInputFileResponse::IsInitialized() const {

  return true;
}

void ReducerInputFileResponse::Swap(ReducerInputFileResponse* other) {
  if (other != this) {
    fileline_.Swap(&other->fileline_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReducerInputFileResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReducerInputFileResponse_descriptor_;
  metadata.reflection = ReducerInputFileResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeartBeatResponse::kStatusFieldNumber;
const int HeartBeatResponse::kMapTasksFieldNumber;
const int HeartBeatResponse::kReduceTasksFieldNumber;
#endif  // !_MSC_VER

HeartBeatResponse::HeartBeatResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HeartBeatResponse)
}

void HeartBeatResponse::InitAsDefaultInstance() {
}

HeartBeatResponse::HeartBeatResponse(const HeartBeatResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HeartBeatResponse)
}

void HeartBeatResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeartBeatResponse::~HeartBeatResponse() {
  // @@protoc_insertion_point(destructor:HeartBeatResponse)
  SharedDtor();
}

void HeartBeatResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeartBeatResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartBeatResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeartBeatResponse_descriptor_;
}

const HeartBeatResponse& HeartBeatResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MapReduce_2eproto();
  return *default_instance_;
}

HeartBeatResponse* HeartBeatResponse::default_instance_ = NULL;

HeartBeatResponse* HeartBeatResponse::New() const {
  return new HeartBeatResponse;
}

void HeartBeatResponse::Clear() {
  status_ = 0;
  maptasks_.Clear();
  reducetasks_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeartBeatResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HeartBeatResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mapTasks;
        break;
      }

      // repeated .MapTaskInfo mapTasks = 2;
      case 2: {
        if (tag == 18) {
         parse_mapTasks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_maptasks()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mapTasks;
        if (input->ExpectTag(26)) goto parse_reduceTasks;
        break;
      }

      // repeated .ReducerTaskInfo reduceTasks = 3;
      case 3: {
        if (tag == 26) {
         parse_reduceTasks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reducetasks()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_reduceTasks;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HeartBeatResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HeartBeatResponse)
  return false;
#undef DO_
}

void HeartBeatResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HeartBeatResponse)
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // repeated .MapTaskInfo mapTasks = 2;
  for (int i = 0; i < this->maptasks_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->maptasks(i), output);
  }

  // repeated .ReducerTaskInfo reduceTasks = 3;
  for (int i = 0; i < this->reducetasks_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->reducetasks(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HeartBeatResponse)
}

::google::protobuf::uint8* HeartBeatResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HeartBeatResponse)
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // repeated .MapTaskInfo mapTasks = 2;
  for (int i = 0; i < this->maptasks_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->maptasks(i), target);
  }

  // repeated .ReducerTaskInfo reduceTasks = 3;
  for (int i = 0; i < this->reducetasks_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->reducetasks(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HeartBeatResponse)
  return target;
}

int HeartBeatResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

  }
  // repeated .MapTaskInfo mapTasks = 2;
  total_size += 1 * this->maptasks_size();
  for (int i = 0; i < this->maptasks_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->maptasks(i));
  }

  // repeated .ReducerTaskInfo reduceTasks = 3;
  total_size += 1 * this->reducetasks_size();
  for (int i = 0; i < this->reducetasks_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reducetasks(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartBeatResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeartBeatResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeartBeatResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeartBeatResponse::MergeFrom(const HeartBeatResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  maptasks_.MergeFrom(from.maptasks_);
  reducetasks_.MergeFrom(from.reducetasks_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeartBeatResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartBeatResponse::CopyFrom(const HeartBeatResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartBeatResponse::IsInitialized() const {

  return true;
}

void HeartBeatResponse::Swap(HeartBeatResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    maptasks_.Swap(&other->maptasks_);
    reducetasks_.Swap(&other->reducetasks_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeartBeatResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeartBeatResponse_descriptor_;
  metadata.reflection = HeartBeatResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
