// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MapReduce.proto

#ifndef PROTOBUF_MapReduce_2eproto__INCLUDED
#define PROTOBUF_MapReduce_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MapReduce_2eproto();
void protobuf_AssignDesc_MapReduce_2eproto();
void protobuf_ShutdownFile_MapReduce_2eproto();

class JobSubmitRequest;
class JobSubmitResponse;
class JobStatusRequest;
class JobStatusResponse;
class MapTaskStatus;
class ReduceTaskStatus;
class HeartBeatRequest;
class MapTaskInfo;
class ReducerTaskInfo;
class ReducerInputFileRequest;
class ReducerInputFileResponse;
class HeartBeatResponse;

// ===================================================================

class JobSubmitRequest : public ::google::protobuf::Message {
 public:
  JobSubmitRequest();
  virtual ~JobSubmitRequest();

  JobSubmitRequest(const JobSubmitRequest& from);

  inline JobSubmitRequest& operator=(const JobSubmitRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JobSubmitRequest& default_instance();

  void Swap(JobSubmitRequest* other);

  // implements Message ----------------------------------------------

  JobSubmitRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JobSubmitRequest& from);
  void MergeFrom(const JobSubmitRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string mapName = 1;
  inline bool has_mapname() const;
  inline void clear_mapname();
  static const int kMapNameFieldNumber = 1;
  inline const ::std::string& mapname() const;
  inline void set_mapname(const ::std::string& value);
  inline void set_mapname(const char* value);
  inline void set_mapname(const char* value, size_t size);
  inline ::std::string* mutable_mapname();
  inline ::std::string* release_mapname();
  inline void set_allocated_mapname(::std::string* mapname);

  // optional string reducerName = 2;
  inline bool has_reducername() const;
  inline void clear_reducername();
  static const int kReducerNameFieldNumber = 2;
  inline const ::std::string& reducername() const;
  inline void set_reducername(const ::std::string& value);
  inline void set_reducername(const char* value);
  inline void set_reducername(const char* value, size_t size);
  inline ::std::string* mutable_reducername();
  inline ::std::string* release_reducername();
  inline void set_allocated_reducername(::std::string* reducername);

  // optional string inputFile = 3;
  inline bool has_inputfile() const;
  inline void clear_inputfile();
  static const int kInputFileFieldNumber = 3;
  inline const ::std::string& inputfile() const;
  inline void set_inputfile(const ::std::string& value);
  inline void set_inputfile(const char* value);
  inline void set_inputfile(const char* value, size_t size);
  inline ::std::string* mutable_inputfile();
  inline ::std::string* release_inputfile();
  inline void set_allocated_inputfile(::std::string* inputfile);

  // optional string outputFile = 4;
  inline bool has_outputfile() const;
  inline void clear_outputfile();
  static const int kOutputFileFieldNumber = 4;
  inline const ::std::string& outputfile() const;
  inline void set_outputfile(const ::std::string& value);
  inline void set_outputfile(const char* value);
  inline void set_outputfile(const char* value, size_t size);
  inline ::std::string* mutable_outputfile();
  inline ::std::string* release_outputfile();
  inline void set_allocated_outputfile(::std::string* outputfile);

  // optional int32 numReduceTasks = 5;
  inline bool has_numreducetasks() const;
  inline void clear_numreducetasks();
  static const int kNumReduceTasksFieldNumber = 5;
  inline ::google::protobuf::int32 numreducetasks() const;
  inline void set_numreducetasks(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:JobSubmitRequest)
 private:
  inline void set_has_mapname();
  inline void clear_has_mapname();
  inline void set_has_reducername();
  inline void clear_has_reducername();
  inline void set_has_inputfile();
  inline void clear_has_inputfile();
  inline void set_has_outputfile();
  inline void clear_has_outputfile();
  inline void set_has_numreducetasks();
  inline void clear_has_numreducetasks();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* mapname_;
  ::std::string* reducername_;
  ::std::string* inputfile_;
  ::std::string* outputfile_;
  ::google::protobuf::int32 numreducetasks_;
  friend void  protobuf_AddDesc_MapReduce_2eproto();
  friend void protobuf_AssignDesc_MapReduce_2eproto();
  friend void protobuf_ShutdownFile_MapReduce_2eproto();

  void InitAsDefaultInstance();
  static JobSubmitRequest* default_instance_;
};
// -------------------------------------------------------------------

class JobSubmitResponse : public ::google::protobuf::Message {
 public:
  JobSubmitResponse();
  virtual ~JobSubmitResponse();

  JobSubmitResponse(const JobSubmitResponse& from);

  inline JobSubmitResponse& operator=(const JobSubmitResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JobSubmitResponse& default_instance();

  void Swap(JobSubmitResponse* other);

  // implements Message ----------------------------------------------

  JobSubmitResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JobSubmitResponse& from);
  void MergeFrom(const JobSubmitResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 jobId = 2;
  inline bool has_jobid() const;
  inline void clear_jobid();
  static const int kJobIdFieldNumber = 2;
  inline ::google::protobuf::int32 jobid() const;
  inline void set_jobid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:JobSubmitResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_jobid();
  inline void clear_has_jobid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 jobid_;
  friend void  protobuf_AddDesc_MapReduce_2eproto();
  friend void protobuf_AssignDesc_MapReduce_2eproto();
  friend void protobuf_ShutdownFile_MapReduce_2eproto();

  void InitAsDefaultInstance();
  static JobSubmitResponse* default_instance_;
};
// -------------------------------------------------------------------

class JobStatusRequest : public ::google::protobuf::Message {
 public:
  JobStatusRequest();
  virtual ~JobStatusRequest();

  JobStatusRequest(const JobStatusRequest& from);

  inline JobStatusRequest& operator=(const JobStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JobStatusRequest& default_instance();

  void Swap(JobStatusRequest* other);

  // implements Message ----------------------------------------------

  JobStatusRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JobStatusRequest& from);
  void MergeFrom(const JobStatusRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 jobId = 1;
  inline bool has_jobid() const;
  inline void clear_jobid();
  static const int kJobIdFieldNumber = 1;
  inline ::google::protobuf::int32 jobid() const;
  inline void set_jobid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:JobStatusRequest)
 private:
  inline void set_has_jobid();
  inline void clear_has_jobid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 jobid_;
  friend void  protobuf_AddDesc_MapReduce_2eproto();
  friend void protobuf_AssignDesc_MapReduce_2eproto();
  friend void protobuf_ShutdownFile_MapReduce_2eproto();

  void InitAsDefaultInstance();
  static JobStatusRequest* default_instance_;
};
// -------------------------------------------------------------------

class JobStatusResponse : public ::google::protobuf::Message {
 public:
  JobStatusResponse();
  virtual ~JobStatusResponse();

  JobStatusResponse(const JobStatusResponse& from);

  inline JobStatusResponse& operator=(const JobStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JobStatusResponse& default_instance();

  void Swap(JobStatusResponse* other);

  // implements Message ----------------------------------------------

  JobStatusResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JobStatusResponse& from);
  void MergeFrom(const JobStatusResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional bool jobDone = 2;
  inline bool has_jobdone() const;
  inline void clear_jobdone();
  static const int kJobDoneFieldNumber = 2;
  inline bool jobdone() const;
  inline void set_jobdone(bool value);

  // optional int32 totalMapTasks = 3;
  inline bool has_totalmaptasks() const;
  inline void clear_totalmaptasks();
  static const int kTotalMapTasksFieldNumber = 3;
  inline ::google::protobuf::int32 totalmaptasks() const;
  inline void set_totalmaptasks(::google::protobuf::int32 value);

  // optional int32 numMapTasksStarted = 4;
  inline bool has_nummaptasksstarted() const;
  inline void clear_nummaptasksstarted();
  static const int kNumMapTasksStartedFieldNumber = 4;
  inline ::google::protobuf::int32 nummaptasksstarted() const;
  inline void set_nummaptasksstarted(::google::protobuf::int32 value);

  // optional int32 totalReduceTasks = 5;
  inline bool has_totalreducetasks() const;
  inline void clear_totalreducetasks();
  static const int kTotalReduceTasksFieldNumber = 5;
  inline ::google::protobuf::int32 totalreducetasks() const;
  inline void set_totalreducetasks(::google::protobuf::int32 value);

  // optional int32 numReduceTasksStarted = 6;
  inline bool has_numreducetasksstarted() const;
  inline void clear_numreducetasksstarted();
  static const int kNumReduceTasksStartedFieldNumber = 6;
  inline ::google::protobuf::int32 numreducetasksstarted() const;
  inline void set_numreducetasksstarted(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:JobStatusResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_jobdone();
  inline void clear_has_jobdone();
  inline void set_has_totalmaptasks();
  inline void clear_has_totalmaptasks();
  inline void set_has_nummaptasksstarted();
  inline void clear_has_nummaptasksstarted();
  inline void set_has_totalreducetasks();
  inline void clear_has_totalreducetasks();
  inline void set_has_numreducetasksstarted();
  inline void clear_has_numreducetasksstarted();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  bool jobdone_;
  ::google::protobuf::int32 totalmaptasks_;
  ::google::protobuf::int32 nummaptasksstarted_;
  ::google::protobuf::int32 totalreducetasks_;
  ::google::protobuf::int32 numreducetasksstarted_;
  friend void  protobuf_AddDesc_MapReduce_2eproto();
  friend void protobuf_AssignDesc_MapReduce_2eproto();
  friend void protobuf_ShutdownFile_MapReduce_2eproto();

  void InitAsDefaultInstance();
  static JobStatusResponse* default_instance_;
};
// -------------------------------------------------------------------

class MapTaskStatus : public ::google::protobuf::Message {
 public:
  MapTaskStatus();
  virtual ~MapTaskStatus();

  MapTaskStatus(const MapTaskStatus& from);

  inline MapTaskStatus& operator=(const MapTaskStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MapTaskStatus& default_instance();

  void Swap(MapTaskStatus* other);

  // implements Message ----------------------------------------------

  MapTaskStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MapTaskStatus& from);
  void MergeFrom(const MapTaskStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 jobId = 1;
  inline bool has_jobid() const;
  inline void clear_jobid();
  static const int kJobIdFieldNumber = 1;
  inline ::google::protobuf::int32 jobid() const;
  inline void set_jobid(::google::protobuf::int32 value);

  // optional int32 taskId = 2;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIdFieldNumber = 2;
  inline ::google::protobuf::int32 taskid() const;
  inline void set_taskid(::google::protobuf::int32 value);

  // optional bool taskCompleted = 3;
  inline bool has_taskcompleted() const;
  inline void clear_taskcompleted();
  static const int kTaskCompletedFieldNumber = 3;
  inline bool taskcompleted() const;
  inline void set_taskcompleted(bool value);

  // optional string mapOutputFile = 4;
  inline bool has_mapoutputfile() const;
  inline void clear_mapoutputfile();
  static const int kMapOutputFileFieldNumber = 4;
  inline const ::std::string& mapoutputfile() const;
  inline void set_mapoutputfile(const ::std::string& value);
  inline void set_mapoutputfile(const char* value);
  inline void set_mapoutputfile(const char* value, size_t size);
  inline ::std::string* mutable_mapoutputfile();
  inline ::std::string* release_mapoutputfile();
  inline void set_allocated_mapoutputfile(::std::string* mapoutputfile);

  // @@protoc_insertion_point(class_scope:MapTaskStatus)
 private:
  inline void set_has_jobid();
  inline void clear_has_jobid();
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_taskcompleted();
  inline void clear_has_taskcompleted();
  inline void set_has_mapoutputfile();
  inline void clear_has_mapoutputfile();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 jobid_;
  ::google::protobuf::int32 taskid_;
  ::std::string* mapoutputfile_;
  bool taskcompleted_;
  friend void  protobuf_AddDesc_MapReduce_2eproto();
  friend void protobuf_AssignDesc_MapReduce_2eproto();
  friend void protobuf_ShutdownFile_MapReduce_2eproto();

  void InitAsDefaultInstance();
  static MapTaskStatus* default_instance_;
};
// -------------------------------------------------------------------

class ReduceTaskStatus : public ::google::protobuf::Message {
 public:
  ReduceTaskStatus();
  virtual ~ReduceTaskStatus();

  ReduceTaskStatus(const ReduceTaskStatus& from);

  inline ReduceTaskStatus& operator=(const ReduceTaskStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReduceTaskStatus& default_instance();

  void Swap(ReduceTaskStatus* other);

  // implements Message ----------------------------------------------

  ReduceTaskStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReduceTaskStatus& from);
  void MergeFrom(const ReduceTaskStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 jobId = 1;
  inline bool has_jobid() const;
  inline void clear_jobid();
  static const int kJobIdFieldNumber = 1;
  inline ::google::protobuf::int32 jobid() const;
  inline void set_jobid(::google::protobuf::int32 value);

  // optional int32 taskId = 2;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIdFieldNumber = 2;
  inline ::google::protobuf::int32 taskid() const;
  inline void set_taskid(::google::protobuf::int32 value);

  // optional bool taskCompleted = 3;
  inline bool has_taskcompleted() const;
  inline void clear_taskcompleted();
  static const int kTaskCompletedFieldNumber = 3;
  inline bool taskcompleted() const;
  inline void set_taskcompleted(bool value);

  // @@protoc_insertion_point(class_scope:ReduceTaskStatus)
 private:
  inline void set_has_jobid();
  inline void clear_has_jobid();
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_taskcompleted();
  inline void clear_has_taskcompleted();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 jobid_;
  ::google::protobuf::int32 taskid_;
  bool taskcompleted_;
  friend void  protobuf_AddDesc_MapReduce_2eproto();
  friend void protobuf_AssignDesc_MapReduce_2eproto();
  friend void protobuf_ShutdownFile_MapReduce_2eproto();

  void InitAsDefaultInstance();
  static ReduceTaskStatus* default_instance_;
};
// -------------------------------------------------------------------

class HeartBeatRequest : public ::google::protobuf::Message {
 public:
  HeartBeatRequest();
  virtual ~HeartBeatRequest();

  HeartBeatRequest(const HeartBeatRequest& from);

  inline HeartBeatRequest& operator=(const HeartBeatRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeatRequest& default_instance();

  void Swap(HeartBeatRequest* other);

  // implements Message ----------------------------------------------

  HeartBeatRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartBeatRequest& from);
  void MergeFrom(const HeartBeatRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 taskTrackerId = 1;
  inline bool has_tasktrackerid() const;
  inline void clear_tasktrackerid();
  static const int kTaskTrackerIdFieldNumber = 1;
  inline ::google::protobuf::int32 tasktrackerid() const;
  inline void set_tasktrackerid(::google::protobuf::int32 value);

  // optional int32 numMapSlotsFree = 2;
  inline bool has_nummapslotsfree() const;
  inline void clear_nummapslotsfree();
  static const int kNumMapSlotsFreeFieldNumber = 2;
  inline ::google::protobuf::int32 nummapslotsfree() const;
  inline void set_nummapslotsfree(::google::protobuf::int32 value);

  // optional int32 numReduceSlotsFree = 3;
  inline bool has_numreduceslotsfree() const;
  inline void clear_numreduceslotsfree();
  static const int kNumReduceSlotsFreeFieldNumber = 3;
  inline ::google::protobuf::int32 numreduceslotsfree() const;
  inline void set_numreduceslotsfree(::google::protobuf::int32 value);

  // repeated .MapTaskStatus mapStatus = 4;
  inline int mapstatus_size() const;
  inline void clear_mapstatus();
  static const int kMapStatusFieldNumber = 4;
  inline const ::MapTaskStatus& mapstatus(int index) const;
  inline ::MapTaskStatus* mutable_mapstatus(int index);
  inline ::MapTaskStatus* add_mapstatus();
  inline const ::google::protobuf::RepeatedPtrField< ::MapTaskStatus >&
      mapstatus() const;
  inline ::google::protobuf::RepeatedPtrField< ::MapTaskStatus >*
      mutable_mapstatus();

  // repeated .ReduceTaskStatus reduceStatus = 5;
  inline int reducestatus_size() const;
  inline void clear_reducestatus();
  static const int kReduceStatusFieldNumber = 5;
  inline const ::ReduceTaskStatus& reducestatus(int index) const;
  inline ::ReduceTaskStatus* mutable_reducestatus(int index);
  inline ::ReduceTaskStatus* add_reducestatus();
  inline const ::google::protobuf::RepeatedPtrField< ::ReduceTaskStatus >&
      reducestatus() const;
  inline ::google::protobuf::RepeatedPtrField< ::ReduceTaskStatus >*
      mutable_reducestatus();

  // @@protoc_insertion_point(class_scope:HeartBeatRequest)
 private:
  inline void set_has_tasktrackerid();
  inline void clear_has_tasktrackerid();
  inline void set_has_nummapslotsfree();
  inline void clear_has_nummapslotsfree();
  inline void set_has_numreduceslotsfree();
  inline void clear_has_numreduceslotsfree();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 tasktrackerid_;
  ::google::protobuf::int32 nummapslotsfree_;
  ::google::protobuf::RepeatedPtrField< ::MapTaskStatus > mapstatus_;
  ::google::protobuf::RepeatedPtrField< ::ReduceTaskStatus > reducestatus_;
  ::google::protobuf::int32 numreduceslotsfree_;
  friend void  protobuf_AddDesc_MapReduce_2eproto();
  friend void protobuf_AssignDesc_MapReduce_2eproto();
  friend void protobuf_ShutdownFile_MapReduce_2eproto();

  void InitAsDefaultInstance();
  static HeartBeatRequest* default_instance_;
};
// -------------------------------------------------------------------

class MapTaskInfo : public ::google::protobuf::Message {
 public:
  MapTaskInfo();
  virtual ~MapTaskInfo();

  MapTaskInfo(const MapTaskInfo& from);

  inline MapTaskInfo& operator=(const MapTaskInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MapTaskInfo& default_instance();

  void Swap(MapTaskInfo* other);

  // implements Message ----------------------------------------------

  MapTaskInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MapTaskInfo& from);
  void MergeFrom(const MapTaskInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 jobId = 1;
  inline bool has_jobid() const;
  inline void clear_jobid();
  static const int kJobIdFieldNumber = 1;
  inline ::google::protobuf::int32 jobid() const;
  inline void set_jobid(::google::protobuf::int32 value);

  // optional int32 numReduceTasks = 3;
  inline bool has_numreducetasks() const;
  inline void clear_numreducetasks();
  static const int kNumReduceTasksFieldNumber = 3;
  inline ::google::protobuf::int32 numreducetasks() const;
  inline void set_numreducetasks(::google::protobuf::int32 value);

  // optional string mapName = 4;
  inline bool has_mapname() const;
  inline void clear_mapname();
  static const int kMapNameFieldNumber = 4;
  inline const ::std::string& mapname() const;
  inline void set_mapname(const ::std::string& value);
  inline void set_mapname(const char* value);
  inline void set_mapname(const char* value, size_t size);
  inline ::std::string* mutable_mapname();
  inline ::std::string* release_mapname();
  inline void set_allocated_mapname(::std::string* mapname);

  // repeated int32 inputBlocks = 5;
  inline int inputblocks_size() const;
  inline void clear_inputblocks();
  static const int kInputBlocksFieldNumber = 5;
  inline ::google::protobuf::int32 inputblocks(int index) const;
  inline void set_inputblocks(int index, ::google::protobuf::int32 value);
  inline void add_inputblocks(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      inputblocks() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_inputblocks();

  // @@protoc_insertion_point(class_scope:MapTaskInfo)
 private:
  inline void set_has_jobid();
  inline void clear_has_jobid();
  inline void set_has_numreducetasks();
  inline void clear_has_numreducetasks();
  inline void set_has_mapname();
  inline void clear_has_mapname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 jobid_;
  ::google::protobuf::int32 numreducetasks_;
  ::std::string* mapname_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > inputblocks_;
  friend void  protobuf_AddDesc_MapReduce_2eproto();
  friend void protobuf_AssignDesc_MapReduce_2eproto();
  friend void protobuf_ShutdownFile_MapReduce_2eproto();

  void InitAsDefaultInstance();
  static MapTaskInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReducerTaskInfo : public ::google::protobuf::Message {
 public:
  ReducerTaskInfo();
  virtual ~ReducerTaskInfo();

  ReducerTaskInfo(const ReducerTaskInfo& from);

  inline ReducerTaskInfo& operator=(const ReducerTaskInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReducerTaskInfo& default_instance();

  void Swap(ReducerTaskInfo* other);

  // implements Message ----------------------------------------------

  ReducerTaskInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReducerTaskInfo& from);
  void MergeFrom(const ReducerTaskInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 jobId = 1;
  inline bool has_jobid() const;
  inline void clear_jobid();
  static const int kJobIdFieldNumber = 1;
  inline ::google::protobuf::int32 jobid() const;
  inline void set_jobid(::google::protobuf::int32 value);

  // optional int32 taskId = 2;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIdFieldNumber = 2;
  inline ::google::protobuf::int32 taskid() const;
  inline void set_taskid(::google::protobuf::int32 value);

  // optional string reducerName = 3;
  inline bool has_reducername() const;
  inline void clear_reducername();
  static const int kReducerNameFieldNumber = 3;
  inline const ::std::string& reducername() const;
  inline void set_reducername(const ::std::string& value);
  inline void set_reducername(const char* value);
  inline void set_reducername(const char* value, size_t size);
  inline ::std::string* mutable_reducername();
  inline ::std::string* release_reducername();
  inline void set_allocated_reducername(::std::string* reducername);

  // optional int32 reducerNumber = 4;
  inline bool has_reducernumber() const;
  inline void clear_reducernumber();
  static const int kReducerNumberFieldNumber = 4;
  inline ::google::protobuf::int32 reducernumber() const;
  inline void set_reducernumber(::google::protobuf::int32 value);

  // optional string ownIp = 5;
  inline bool has_ownip() const;
  inline void clear_ownip();
  static const int kOwnIpFieldNumber = 5;
  inline const ::std::string& ownip() const;
  inline void set_ownip(const ::std::string& value);
  inline void set_ownip(const char* value);
  inline void set_ownip(const char* value, size_t size);
  inline ::std::string* mutable_ownip();
  inline ::std::string* release_ownip();
  inline void set_allocated_ownip(::std::string* ownip);

  // repeated string mapOutputLocation = 6;
  inline int mapoutputlocation_size() const;
  inline void clear_mapoutputlocation();
  static const int kMapOutputLocationFieldNumber = 6;
  inline const ::std::string& mapoutputlocation(int index) const;
  inline ::std::string* mutable_mapoutputlocation(int index);
  inline void set_mapoutputlocation(int index, const ::std::string& value);
  inline void set_mapoutputlocation(int index, const char* value);
  inline void set_mapoutputlocation(int index, const char* value, size_t size);
  inline ::std::string* add_mapoutputlocation();
  inline void add_mapoutputlocation(const ::std::string& value);
  inline void add_mapoutputlocation(const char* value);
  inline void add_mapoutputlocation(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& mapoutputlocation() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_mapoutputlocation();

  // optional string outputFile = 7;
  inline bool has_outputfile() const;
  inline void clear_outputfile();
  static const int kOutputFileFieldNumber = 7;
  inline const ::std::string& outputfile() const;
  inline void set_outputfile(const ::std::string& value);
  inline void set_outputfile(const char* value);
  inline void set_outputfile(const char* value, size_t size);
  inline ::std::string* mutable_outputfile();
  inline ::std::string* release_outputfile();
  inline void set_allocated_outputfile(::std::string* outputfile);

  // @@protoc_insertion_point(class_scope:ReducerTaskInfo)
 private:
  inline void set_has_jobid();
  inline void clear_has_jobid();
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_reducername();
  inline void clear_has_reducername();
  inline void set_has_reducernumber();
  inline void clear_has_reducernumber();
  inline void set_has_ownip();
  inline void clear_has_ownip();
  inline void set_has_outputfile();
  inline void clear_has_outputfile();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 jobid_;
  ::google::protobuf::int32 taskid_;
  ::std::string* reducername_;
  ::std::string* ownip_;
  ::google::protobuf::RepeatedPtrField< ::std::string> mapoutputlocation_;
  ::std::string* outputfile_;
  ::google::protobuf::int32 reducernumber_;
  friend void  protobuf_AddDesc_MapReduce_2eproto();
  friend void protobuf_AssignDesc_MapReduce_2eproto();
  friend void protobuf_ShutdownFile_MapReduce_2eproto();

  void InitAsDefaultInstance();
  static ReducerTaskInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReducerInputFileRequest : public ::google::protobuf::Message {
 public:
  ReducerInputFileRequest();
  virtual ~ReducerInputFileRequest();

  ReducerInputFileRequest(const ReducerInputFileRequest& from);

  inline ReducerInputFileRequest& operator=(const ReducerInputFileRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReducerInputFileRequest& default_instance();

  void Swap(ReducerInputFileRequest* other);

  // implements Message ----------------------------------------------

  ReducerInputFileRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReducerInputFileRequest& from);
  void MergeFrom(const ReducerInputFileRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string filename = 1;
  inline bool has_filename() const;
  inline void clear_filename();
  static const int kFilenameFieldNumber = 1;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const char* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // @@protoc_insertion_point(class_scope:ReducerInputFileRequest)
 private:
  inline void set_has_filename();
  inline void clear_has_filename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* filename_;
  friend void  protobuf_AddDesc_MapReduce_2eproto();
  friend void protobuf_AssignDesc_MapReduce_2eproto();
  friend void protobuf_ShutdownFile_MapReduce_2eproto();

  void InitAsDefaultInstance();
  static ReducerInputFileRequest* default_instance_;
};
// -------------------------------------------------------------------

class ReducerInputFileResponse : public ::google::protobuf::Message {
 public:
  ReducerInputFileResponse();
  virtual ~ReducerInputFileResponse();

  ReducerInputFileResponse(const ReducerInputFileResponse& from);

  inline ReducerInputFileResponse& operator=(const ReducerInputFileResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReducerInputFileResponse& default_instance();

  void Swap(ReducerInputFileResponse* other);

  // implements Message ----------------------------------------------

  ReducerInputFileResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReducerInputFileResponse& from);
  void MergeFrom(const ReducerInputFileResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string fileline = 1;
  inline int fileline_size() const;
  inline void clear_fileline();
  static const int kFilelineFieldNumber = 1;
  inline const ::std::string& fileline(int index) const;
  inline ::std::string* mutable_fileline(int index);
  inline void set_fileline(int index, const ::std::string& value);
  inline void set_fileline(int index, const char* value);
  inline void set_fileline(int index, const char* value, size_t size);
  inline ::std::string* add_fileline();
  inline void add_fileline(const ::std::string& value);
  inline void add_fileline(const char* value);
  inline void add_fileline(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& fileline() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_fileline();

  // @@protoc_insertion_point(class_scope:ReducerInputFileResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> fileline_;
  friend void  protobuf_AddDesc_MapReduce_2eproto();
  friend void protobuf_AssignDesc_MapReduce_2eproto();
  friend void protobuf_ShutdownFile_MapReduce_2eproto();

  void InitAsDefaultInstance();
  static ReducerInputFileResponse* default_instance_;
};
// -------------------------------------------------------------------

class HeartBeatResponse : public ::google::protobuf::Message {
 public:
  HeartBeatResponse();
  virtual ~HeartBeatResponse();

  HeartBeatResponse(const HeartBeatResponse& from);

  inline HeartBeatResponse& operator=(const HeartBeatResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeatResponse& default_instance();

  void Swap(HeartBeatResponse* other);

  // implements Message ----------------------------------------------

  HeartBeatResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartBeatResponse& from);
  void MergeFrom(const HeartBeatResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // repeated .MapTaskInfo mapTasks = 2;
  inline int maptasks_size() const;
  inline void clear_maptasks();
  static const int kMapTasksFieldNumber = 2;
  inline const ::MapTaskInfo& maptasks(int index) const;
  inline ::MapTaskInfo* mutable_maptasks(int index);
  inline ::MapTaskInfo* add_maptasks();
  inline const ::google::protobuf::RepeatedPtrField< ::MapTaskInfo >&
      maptasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::MapTaskInfo >*
      mutable_maptasks();

  // repeated .ReducerTaskInfo reduceTasks = 3;
  inline int reducetasks_size() const;
  inline void clear_reducetasks();
  static const int kReduceTasksFieldNumber = 3;
  inline const ::ReducerTaskInfo& reducetasks(int index) const;
  inline ::ReducerTaskInfo* mutable_reducetasks(int index);
  inline ::ReducerTaskInfo* add_reducetasks();
  inline const ::google::protobuf::RepeatedPtrField< ::ReducerTaskInfo >&
      reducetasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::ReducerTaskInfo >*
      mutable_reducetasks();

  // @@protoc_insertion_point(class_scope:HeartBeatResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MapTaskInfo > maptasks_;
  ::google::protobuf::RepeatedPtrField< ::ReducerTaskInfo > reducetasks_;
  ::google::protobuf::int32 status_;
  friend void  protobuf_AddDesc_MapReduce_2eproto();
  friend void protobuf_AssignDesc_MapReduce_2eproto();
  friend void protobuf_ShutdownFile_MapReduce_2eproto();

  void InitAsDefaultInstance();
  static HeartBeatResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// JobSubmitRequest

// optional string mapName = 1;
inline bool JobSubmitRequest::has_mapname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobSubmitRequest::set_has_mapname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JobSubmitRequest::clear_has_mapname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JobSubmitRequest::clear_mapname() {
  if (mapname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapname_->clear();
  }
  clear_has_mapname();
}
inline const ::std::string& JobSubmitRequest::mapname() const {
  // @@protoc_insertion_point(field_get:JobSubmitRequest.mapName)
  return *mapname_;
}
inline void JobSubmitRequest::set_mapname(const ::std::string& value) {
  set_has_mapname();
  if (mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapname_ = new ::std::string;
  }
  mapname_->assign(value);
  // @@protoc_insertion_point(field_set:JobSubmitRequest.mapName)
}
inline void JobSubmitRequest::set_mapname(const char* value) {
  set_has_mapname();
  if (mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapname_ = new ::std::string;
  }
  mapname_->assign(value);
  // @@protoc_insertion_point(field_set_char:JobSubmitRequest.mapName)
}
inline void JobSubmitRequest::set_mapname(const char* value, size_t size) {
  set_has_mapname();
  if (mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapname_ = new ::std::string;
  }
  mapname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:JobSubmitRequest.mapName)
}
inline ::std::string* JobSubmitRequest::mutable_mapname() {
  set_has_mapname();
  if (mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:JobSubmitRequest.mapName)
  return mapname_;
}
inline ::std::string* JobSubmitRequest::release_mapname() {
  clear_has_mapname();
  if (mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mapname_;
    mapname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void JobSubmitRequest::set_allocated_mapname(::std::string* mapname) {
  if (mapname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mapname_;
  }
  if (mapname) {
    set_has_mapname();
    mapname_ = mapname;
  } else {
    clear_has_mapname();
    mapname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:JobSubmitRequest.mapName)
}

// optional string reducerName = 2;
inline bool JobSubmitRequest::has_reducername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobSubmitRequest::set_has_reducername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JobSubmitRequest::clear_has_reducername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JobSubmitRequest::clear_reducername() {
  if (reducername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reducername_->clear();
  }
  clear_has_reducername();
}
inline const ::std::string& JobSubmitRequest::reducername() const {
  // @@protoc_insertion_point(field_get:JobSubmitRequest.reducerName)
  return *reducername_;
}
inline void JobSubmitRequest::set_reducername(const ::std::string& value) {
  set_has_reducername();
  if (reducername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reducername_ = new ::std::string;
  }
  reducername_->assign(value);
  // @@protoc_insertion_point(field_set:JobSubmitRequest.reducerName)
}
inline void JobSubmitRequest::set_reducername(const char* value) {
  set_has_reducername();
  if (reducername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reducername_ = new ::std::string;
  }
  reducername_->assign(value);
  // @@protoc_insertion_point(field_set_char:JobSubmitRequest.reducerName)
}
inline void JobSubmitRequest::set_reducername(const char* value, size_t size) {
  set_has_reducername();
  if (reducername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reducername_ = new ::std::string;
  }
  reducername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:JobSubmitRequest.reducerName)
}
inline ::std::string* JobSubmitRequest::mutable_reducername() {
  set_has_reducername();
  if (reducername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reducername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:JobSubmitRequest.reducerName)
  return reducername_;
}
inline ::std::string* JobSubmitRequest::release_reducername() {
  clear_has_reducername();
  if (reducername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = reducername_;
    reducername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void JobSubmitRequest::set_allocated_reducername(::std::string* reducername) {
  if (reducername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reducername_;
  }
  if (reducername) {
    set_has_reducername();
    reducername_ = reducername;
  } else {
    clear_has_reducername();
    reducername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:JobSubmitRequest.reducerName)
}

// optional string inputFile = 3;
inline bool JobSubmitRequest::has_inputfile() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JobSubmitRequest::set_has_inputfile() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JobSubmitRequest::clear_has_inputfile() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JobSubmitRequest::clear_inputfile() {
  if (inputfile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inputfile_->clear();
  }
  clear_has_inputfile();
}
inline const ::std::string& JobSubmitRequest::inputfile() const {
  // @@protoc_insertion_point(field_get:JobSubmitRequest.inputFile)
  return *inputfile_;
}
inline void JobSubmitRequest::set_inputfile(const ::std::string& value) {
  set_has_inputfile();
  if (inputfile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inputfile_ = new ::std::string;
  }
  inputfile_->assign(value);
  // @@protoc_insertion_point(field_set:JobSubmitRequest.inputFile)
}
inline void JobSubmitRequest::set_inputfile(const char* value) {
  set_has_inputfile();
  if (inputfile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inputfile_ = new ::std::string;
  }
  inputfile_->assign(value);
  // @@protoc_insertion_point(field_set_char:JobSubmitRequest.inputFile)
}
inline void JobSubmitRequest::set_inputfile(const char* value, size_t size) {
  set_has_inputfile();
  if (inputfile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inputfile_ = new ::std::string;
  }
  inputfile_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:JobSubmitRequest.inputFile)
}
inline ::std::string* JobSubmitRequest::mutable_inputfile() {
  set_has_inputfile();
  if (inputfile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    inputfile_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:JobSubmitRequest.inputFile)
  return inputfile_;
}
inline ::std::string* JobSubmitRequest::release_inputfile() {
  clear_has_inputfile();
  if (inputfile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = inputfile_;
    inputfile_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void JobSubmitRequest::set_allocated_inputfile(::std::string* inputfile) {
  if (inputfile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete inputfile_;
  }
  if (inputfile) {
    set_has_inputfile();
    inputfile_ = inputfile;
  } else {
    clear_has_inputfile();
    inputfile_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:JobSubmitRequest.inputFile)
}

// optional string outputFile = 4;
inline bool JobSubmitRequest::has_outputfile() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JobSubmitRequest::set_has_outputfile() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JobSubmitRequest::clear_has_outputfile() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JobSubmitRequest::clear_outputfile() {
  if (outputfile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    outputfile_->clear();
  }
  clear_has_outputfile();
}
inline const ::std::string& JobSubmitRequest::outputfile() const {
  // @@protoc_insertion_point(field_get:JobSubmitRequest.outputFile)
  return *outputfile_;
}
inline void JobSubmitRequest::set_outputfile(const ::std::string& value) {
  set_has_outputfile();
  if (outputfile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    outputfile_ = new ::std::string;
  }
  outputfile_->assign(value);
  // @@protoc_insertion_point(field_set:JobSubmitRequest.outputFile)
}
inline void JobSubmitRequest::set_outputfile(const char* value) {
  set_has_outputfile();
  if (outputfile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    outputfile_ = new ::std::string;
  }
  outputfile_->assign(value);
  // @@protoc_insertion_point(field_set_char:JobSubmitRequest.outputFile)
}
inline void JobSubmitRequest::set_outputfile(const char* value, size_t size) {
  set_has_outputfile();
  if (outputfile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    outputfile_ = new ::std::string;
  }
  outputfile_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:JobSubmitRequest.outputFile)
}
inline ::std::string* JobSubmitRequest::mutable_outputfile() {
  set_has_outputfile();
  if (outputfile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    outputfile_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:JobSubmitRequest.outputFile)
  return outputfile_;
}
inline ::std::string* JobSubmitRequest::release_outputfile() {
  clear_has_outputfile();
  if (outputfile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = outputfile_;
    outputfile_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void JobSubmitRequest::set_allocated_outputfile(::std::string* outputfile) {
  if (outputfile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete outputfile_;
  }
  if (outputfile) {
    set_has_outputfile();
    outputfile_ = outputfile;
  } else {
    clear_has_outputfile();
    outputfile_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:JobSubmitRequest.outputFile)
}

// optional int32 numReduceTasks = 5;
inline bool JobSubmitRequest::has_numreducetasks() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JobSubmitRequest::set_has_numreducetasks() {
  _has_bits_[0] |= 0x00000010u;
}
inline void JobSubmitRequest::clear_has_numreducetasks() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void JobSubmitRequest::clear_numreducetasks() {
  numreducetasks_ = 0;
  clear_has_numreducetasks();
}
inline ::google::protobuf::int32 JobSubmitRequest::numreducetasks() const {
  // @@protoc_insertion_point(field_get:JobSubmitRequest.numReduceTasks)
  return numreducetasks_;
}
inline void JobSubmitRequest::set_numreducetasks(::google::protobuf::int32 value) {
  set_has_numreducetasks();
  numreducetasks_ = value;
  // @@protoc_insertion_point(field_set:JobSubmitRequest.numReduceTasks)
}

// -------------------------------------------------------------------

// JobSubmitResponse

// optional int32 status = 1;
inline bool JobSubmitResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobSubmitResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JobSubmitResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JobSubmitResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 JobSubmitResponse::status() const {
  // @@protoc_insertion_point(field_get:JobSubmitResponse.status)
  return status_;
}
inline void JobSubmitResponse::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:JobSubmitResponse.status)
}

// optional int32 jobId = 2;
inline bool JobSubmitResponse::has_jobid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobSubmitResponse::set_has_jobid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JobSubmitResponse::clear_has_jobid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JobSubmitResponse::clear_jobid() {
  jobid_ = 0;
  clear_has_jobid();
}
inline ::google::protobuf::int32 JobSubmitResponse::jobid() const {
  // @@protoc_insertion_point(field_get:JobSubmitResponse.jobId)
  return jobid_;
}
inline void JobSubmitResponse::set_jobid(::google::protobuf::int32 value) {
  set_has_jobid();
  jobid_ = value;
  // @@protoc_insertion_point(field_set:JobSubmitResponse.jobId)
}

// -------------------------------------------------------------------

// JobStatusRequest

// optional int32 jobId = 1;
inline bool JobStatusRequest::has_jobid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobStatusRequest::set_has_jobid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JobStatusRequest::clear_has_jobid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JobStatusRequest::clear_jobid() {
  jobid_ = 0;
  clear_has_jobid();
}
inline ::google::protobuf::int32 JobStatusRequest::jobid() const {
  // @@protoc_insertion_point(field_get:JobStatusRequest.jobId)
  return jobid_;
}
inline void JobStatusRequest::set_jobid(::google::protobuf::int32 value) {
  set_has_jobid();
  jobid_ = value;
  // @@protoc_insertion_point(field_set:JobStatusRequest.jobId)
}

// -------------------------------------------------------------------

// JobStatusResponse

// optional int32 status = 1;
inline bool JobStatusResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobStatusResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JobStatusResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JobStatusResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 JobStatusResponse::status() const {
  // @@protoc_insertion_point(field_get:JobStatusResponse.status)
  return status_;
}
inline void JobStatusResponse::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:JobStatusResponse.status)
}

// optional bool jobDone = 2;
inline bool JobStatusResponse::has_jobdone() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobStatusResponse::set_has_jobdone() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JobStatusResponse::clear_has_jobdone() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JobStatusResponse::clear_jobdone() {
  jobdone_ = false;
  clear_has_jobdone();
}
inline bool JobStatusResponse::jobdone() const {
  // @@protoc_insertion_point(field_get:JobStatusResponse.jobDone)
  return jobdone_;
}
inline void JobStatusResponse::set_jobdone(bool value) {
  set_has_jobdone();
  jobdone_ = value;
  // @@protoc_insertion_point(field_set:JobStatusResponse.jobDone)
}

// optional int32 totalMapTasks = 3;
inline bool JobStatusResponse::has_totalmaptasks() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JobStatusResponse::set_has_totalmaptasks() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JobStatusResponse::clear_has_totalmaptasks() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JobStatusResponse::clear_totalmaptasks() {
  totalmaptasks_ = 0;
  clear_has_totalmaptasks();
}
inline ::google::protobuf::int32 JobStatusResponse::totalmaptasks() const {
  // @@protoc_insertion_point(field_get:JobStatusResponse.totalMapTasks)
  return totalmaptasks_;
}
inline void JobStatusResponse::set_totalmaptasks(::google::protobuf::int32 value) {
  set_has_totalmaptasks();
  totalmaptasks_ = value;
  // @@protoc_insertion_point(field_set:JobStatusResponse.totalMapTasks)
}

// optional int32 numMapTasksStarted = 4;
inline bool JobStatusResponse::has_nummaptasksstarted() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JobStatusResponse::set_has_nummaptasksstarted() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JobStatusResponse::clear_has_nummaptasksstarted() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JobStatusResponse::clear_nummaptasksstarted() {
  nummaptasksstarted_ = 0;
  clear_has_nummaptasksstarted();
}
inline ::google::protobuf::int32 JobStatusResponse::nummaptasksstarted() const {
  // @@protoc_insertion_point(field_get:JobStatusResponse.numMapTasksStarted)
  return nummaptasksstarted_;
}
inline void JobStatusResponse::set_nummaptasksstarted(::google::protobuf::int32 value) {
  set_has_nummaptasksstarted();
  nummaptasksstarted_ = value;
  // @@protoc_insertion_point(field_set:JobStatusResponse.numMapTasksStarted)
}

// optional int32 totalReduceTasks = 5;
inline bool JobStatusResponse::has_totalreducetasks() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JobStatusResponse::set_has_totalreducetasks() {
  _has_bits_[0] |= 0x00000010u;
}
inline void JobStatusResponse::clear_has_totalreducetasks() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void JobStatusResponse::clear_totalreducetasks() {
  totalreducetasks_ = 0;
  clear_has_totalreducetasks();
}
inline ::google::protobuf::int32 JobStatusResponse::totalreducetasks() const {
  // @@protoc_insertion_point(field_get:JobStatusResponse.totalReduceTasks)
  return totalreducetasks_;
}
inline void JobStatusResponse::set_totalreducetasks(::google::protobuf::int32 value) {
  set_has_totalreducetasks();
  totalreducetasks_ = value;
  // @@protoc_insertion_point(field_set:JobStatusResponse.totalReduceTasks)
}

// optional int32 numReduceTasksStarted = 6;
inline bool JobStatusResponse::has_numreducetasksstarted() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void JobStatusResponse::set_has_numreducetasksstarted() {
  _has_bits_[0] |= 0x00000020u;
}
inline void JobStatusResponse::clear_has_numreducetasksstarted() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void JobStatusResponse::clear_numreducetasksstarted() {
  numreducetasksstarted_ = 0;
  clear_has_numreducetasksstarted();
}
inline ::google::protobuf::int32 JobStatusResponse::numreducetasksstarted() const {
  // @@protoc_insertion_point(field_get:JobStatusResponse.numReduceTasksStarted)
  return numreducetasksstarted_;
}
inline void JobStatusResponse::set_numreducetasksstarted(::google::protobuf::int32 value) {
  set_has_numreducetasksstarted();
  numreducetasksstarted_ = value;
  // @@protoc_insertion_point(field_set:JobStatusResponse.numReduceTasksStarted)
}

// -------------------------------------------------------------------

// MapTaskStatus

// optional int32 jobId = 1;
inline bool MapTaskStatus::has_jobid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MapTaskStatus::set_has_jobid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MapTaskStatus::clear_has_jobid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MapTaskStatus::clear_jobid() {
  jobid_ = 0;
  clear_has_jobid();
}
inline ::google::protobuf::int32 MapTaskStatus::jobid() const {
  // @@protoc_insertion_point(field_get:MapTaskStatus.jobId)
  return jobid_;
}
inline void MapTaskStatus::set_jobid(::google::protobuf::int32 value) {
  set_has_jobid();
  jobid_ = value;
  // @@protoc_insertion_point(field_set:MapTaskStatus.jobId)
}

// optional int32 taskId = 2;
inline bool MapTaskStatus::has_taskid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MapTaskStatus::set_has_taskid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MapTaskStatus::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MapTaskStatus::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 MapTaskStatus::taskid() const {
  // @@protoc_insertion_point(field_get:MapTaskStatus.taskId)
  return taskid_;
}
inline void MapTaskStatus::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:MapTaskStatus.taskId)
}

// optional bool taskCompleted = 3;
inline bool MapTaskStatus::has_taskcompleted() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MapTaskStatus::set_has_taskcompleted() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MapTaskStatus::clear_has_taskcompleted() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MapTaskStatus::clear_taskcompleted() {
  taskcompleted_ = false;
  clear_has_taskcompleted();
}
inline bool MapTaskStatus::taskcompleted() const {
  // @@protoc_insertion_point(field_get:MapTaskStatus.taskCompleted)
  return taskcompleted_;
}
inline void MapTaskStatus::set_taskcompleted(bool value) {
  set_has_taskcompleted();
  taskcompleted_ = value;
  // @@protoc_insertion_point(field_set:MapTaskStatus.taskCompleted)
}

// optional string mapOutputFile = 4;
inline bool MapTaskStatus::has_mapoutputfile() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MapTaskStatus::set_has_mapoutputfile() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MapTaskStatus::clear_has_mapoutputfile() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MapTaskStatus::clear_mapoutputfile() {
  if (mapoutputfile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapoutputfile_->clear();
  }
  clear_has_mapoutputfile();
}
inline const ::std::string& MapTaskStatus::mapoutputfile() const {
  // @@protoc_insertion_point(field_get:MapTaskStatus.mapOutputFile)
  return *mapoutputfile_;
}
inline void MapTaskStatus::set_mapoutputfile(const ::std::string& value) {
  set_has_mapoutputfile();
  if (mapoutputfile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapoutputfile_ = new ::std::string;
  }
  mapoutputfile_->assign(value);
  // @@protoc_insertion_point(field_set:MapTaskStatus.mapOutputFile)
}
inline void MapTaskStatus::set_mapoutputfile(const char* value) {
  set_has_mapoutputfile();
  if (mapoutputfile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapoutputfile_ = new ::std::string;
  }
  mapoutputfile_->assign(value);
  // @@protoc_insertion_point(field_set_char:MapTaskStatus.mapOutputFile)
}
inline void MapTaskStatus::set_mapoutputfile(const char* value, size_t size) {
  set_has_mapoutputfile();
  if (mapoutputfile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapoutputfile_ = new ::std::string;
  }
  mapoutputfile_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MapTaskStatus.mapOutputFile)
}
inline ::std::string* MapTaskStatus::mutable_mapoutputfile() {
  set_has_mapoutputfile();
  if (mapoutputfile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapoutputfile_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MapTaskStatus.mapOutputFile)
  return mapoutputfile_;
}
inline ::std::string* MapTaskStatus::release_mapoutputfile() {
  clear_has_mapoutputfile();
  if (mapoutputfile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mapoutputfile_;
    mapoutputfile_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MapTaskStatus::set_allocated_mapoutputfile(::std::string* mapoutputfile) {
  if (mapoutputfile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mapoutputfile_;
  }
  if (mapoutputfile) {
    set_has_mapoutputfile();
    mapoutputfile_ = mapoutputfile;
  } else {
    clear_has_mapoutputfile();
    mapoutputfile_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MapTaskStatus.mapOutputFile)
}

// -------------------------------------------------------------------

// ReduceTaskStatus

// optional int32 jobId = 1;
inline bool ReduceTaskStatus::has_jobid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReduceTaskStatus::set_has_jobid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReduceTaskStatus::clear_has_jobid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReduceTaskStatus::clear_jobid() {
  jobid_ = 0;
  clear_has_jobid();
}
inline ::google::protobuf::int32 ReduceTaskStatus::jobid() const {
  // @@protoc_insertion_point(field_get:ReduceTaskStatus.jobId)
  return jobid_;
}
inline void ReduceTaskStatus::set_jobid(::google::protobuf::int32 value) {
  set_has_jobid();
  jobid_ = value;
  // @@protoc_insertion_point(field_set:ReduceTaskStatus.jobId)
}

// optional int32 taskId = 2;
inline bool ReduceTaskStatus::has_taskid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReduceTaskStatus::set_has_taskid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReduceTaskStatus::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReduceTaskStatus::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 ReduceTaskStatus::taskid() const {
  // @@protoc_insertion_point(field_get:ReduceTaskStatus.taskId)
  return taskid_;
}
inline void ReduceTaskStatus::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:ReduceTaskStatus.taskId)
}

// optional bool taskCompleted = 3;
inline bool ReduceTaskStatus::has_taskcompleted() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReduceTaskStatus::set_has_taskcompleted() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReduceTaskStatus::clear_has_taskcompleted() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReduceTaskStatus::clear_taskcompleted() {
  taskcompleted_ = false;
  clear_has_taskcompleted();
}
inline bool ReduceTaskStatus::taskcompleted() const {
  // @@protoc_insertion_point(field_get:ReduceTaskStatus.taskCompleted)
  return taskcompleted_;
}
inline void ReduceTaskStatus::set_taskcompleted(bool value) {
  set_has_taskcompleted();
  taskcompleted_ = value;
  // @@protoc_insertion_point(field_set:ReduceTaskStatus.taskCompleted)
}

// -------------------------------------------------------------------

// HeartBeatRequest

// optional int32 taskTrackerId = 1;
inline bool HeartBeatRequest::has_tasktrackerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartBeatRequest::set_has_tasktrackerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartBeatRequest::clear_has_tasktrackerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartBeatRequest::clear_tasktrackerid() {
  tasktrackerid_ = 0;
  clear_has_tasktrackerid();
}
inline ::google::protobuf::int32 HeartBeatRequest::tasktrackerid() const {
  // @@protoc_insertion_point(field_get:HeartBeatRequest.taskTrackerId)
  return tasktrackerid_;
}
inline void HeartBeatRequest::set_tasktrackerid(::google::protobuf::int32 value) {
  set_has_tasktrackerid();
  tasktrackerid_ = value;
  // @@protoc_insertion_point(field_set:HeartBeatRequest.taskTrackerId)
}

// optional int32 numMapSlotsFree = 2;
inline bool HeartBeatRequest::has_nummapslotsfree() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeartBeatRequest::set_has_nummapslotsfree() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeartBeatRequest::clear_has_nummapslotsfree() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeartBeatRequest::clear_nummapslotsfree() {
  nummapslotsfree_ = 0;
  clear_has_nummapslotsfree();
}
inline ::google::protobuf::int32 HeartBeatRequest::nummapslotsfree() const {
  // @@protoc_insertion_point(field_get:HeartBeatRequest.numMapSlotsFree)
  return nummapslotsfree_;
}
inline void HeartBeatRequest::set_nummapslotsfree(::google::protobuf::int32 value) {
  set_has_nummapslotsfree();
  nummapslotsfree_ = value;
  // @@protoc_insertion_point(field_set:HeartBeatRequest.numMapSlotsFree)
}

// optional int32 numReduceSlotsFree = 3;
inline bool HeartBeatRequest::has_numreduceslotsfree() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeartBeatRequest::set_has_numreduceslotsfree() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeartBeatRequest::clear_has_numreduceslotsfree() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeartBeatRequest::clear_numreduceslotsfree() {
  numreduceslotsfree_ = 0;
  clear_has_numreduceslotsfree();
}
inline ::google::protobuf::int32 HeartBeatRequest::numreduceslotsfree() const {
  // @@protoc_insertion_point(field_get:HeartBeatRequest.numReduceSlotsFree)
  return numreduceslotsfree_;
}
inline void HeartBeatRequest::set_numreduceslotsfree(::google::protobuf::int32 value) {
  set_has_numreduceslotsfree();
  numreduceslotsfree_ = value;
  // @@protoc_insertion_point(field_set:HeartBeatRequest.numReduceSlotsFree)
}

// repeated .MapTaskStatus mapStatus = 4;
inline int HeartBeatRequest::mapstatus_size() const {
  return mapstatus_.size();
}
inline void HeartBeatRequest::clear_mapstatus() {
  mapstatus_.Clear();
}
inline const ::MapTaskStatus& HeartBeatRequest::mapstatus(int index) const {
  // @@protoc_insertion_point(field_get:HeartBeatRequest.mapStatus)
  return mapstatus_.Get(index);
}
inline ::MapTaskStatus* HeartBeatRequest::mutable_mapstatus(int index) {
  // @@protoc_insertion_point(field_mutable:HeartBeatRequest.mapStatus)
  return mapstatus_.Mutable(index);
}
inline ::MapTaskStatus* HeartBeatRequest::add_mapstatus() {
  // @@protoc_insertion_point(field_add:HeartBeatRequest.mapStatus)
  return mapstatus_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MapTaskStatus >&
HeartBeatRequest::mapstatus() const {
  // @@protoc_insertion_point(field_list:HeartBeatRequest.mapStatus)
  return mapstatus_;
}
inline ::google::protobuf::RepeatedPtrField< ::MapTaskStatus >*
HeartBeatRequest::mutable_mapstatus() {
  // @@protoc_insertion_point(field_mutable_list:HeartBeatRequest.mapStatus)
  return &mapstatus_;
}

// repeated .ReduceTaskStatus reduceStatus = 5;
inline int HeartBeatRequest::reducestatus_size() const {
  return reducestatus_.size();
}
inline void HeartBeatRequest::clear_reducestatus() {
  reducestatus_.Clear();
}
inline const ::ReduceTaskStatus& HeartBeatRequest::reducestatus(int index) const {
  // @@protoc_insertion_point(field_get:HeartBeatRequest.reduceStatus)
  return reducestatus_.Get(index);
}
inline ::ReduceTaskStatus* HeartBeatRequest::mutable_reducestatus(int index) {
  // @@protoc_insertion_point(field_mutable:HeartBeatRequest.reduceStatus)
  return reducestatus_.Mutable(index);
}
inline ::ReduceTaskStatus* HeartBeatRequest::add_reducestatus() {
  // @@protoc_insertion_point(field_add:HeartBeatRequest.reduceStatus)
  return reducestatus_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ReduceTaskStatus >&
HeartBeatRequest::reducestatus() const {
  // @@protoc_insertion_point(field_list:HeartBeatRequest.reduceStatus)
  return reducestatus_;
}
inline ::google::protobuf::RepeatedPtrField< ::ReduceTaskStatus >*
HeartBeatRequest::mutable_reducestatus() {
  // @@protoc_insertion_point(field_mutable_list:HeartBeatRequest.reduceStatus)
  return &reducestatus_;
}

// -------------------------------------------------------------------

// MapTaskInfo

// optional int32 jobId = 1;
inline bool MapTaskInfo::has_jobid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MapTaskInfo::set_has_jobid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MapTaskInfo::clear_has_jobid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MapTaskInfo::clear_jobid() {
  jobid_ = 0;
  clear_has_jobid();
}
inline ::google::protobuf::int32 MapTaskInfo::jobid() const {
  // @@protoc_insertion_point(field_get:MapTaskInfo.jobId)
  return jobid_;
}
inline void MapTaskInfo::set_jobid(::google::protobuf::int32 value) {
  set_has_jobid();
  jobid_ = value;
  // @@protoc_insertion_point(field_set:MapTaskInfo.jobId)
}

// optional int32 numReduceTasks = 3;
inline bool MapTaskInfo::has_numreducetasks() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MapTaskInfo::set_has_numreducetasks() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MapTaskInfo::clear_has_numreducetasks() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MapTaskInfo::clear_numreducetasks() {
  numreducetasks_ = 0;
  clear_has_numreducetasks();
}
inline ::google::protobuf::int32 MapTaskInfo::numreducetasks() const {
  // @@protoc_insertion_point(field_get:MapTaskInfo.numReduceTasks)
  return numreducetasks_;
}
inline void MapTaskInfo::set_numreducetasks(::google::protobuf::int32 value) {
  set_has_numreducetasks();
  numreducetasks_ = value;
  // @@protoc_insertion_point(field_set:MapTaskInfo.numReduceTasks)
}

// optional string mapName = 4;
inline bool MapTaskInfo::has_mapname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MapTaskInfo::set_has_mapname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MapTaskInfo::clear_has_mapname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MapTaskInfo::clear_mapname() {
  if (mapname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapname_->clear();
  }
  clear_has_mapname();
}
inline const ::std::string& MapTaskInfo::mapname() const {
  // @@protoc_insertion_point(field_get:MapTaskInfo.mapName)
  return *mapname_;
}
inline void MapTaskInfo::set_mapname(const ::std::string& value) {
  set_has_mapname();
  if (mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapname_ = new ::std::string;
  }
  mapname_->assign(value);
  // @@protoc_insertion_point(field_set:MapTaskInfo.mapName)
}
inline void MapTaskInfo::set_mapname(const char* value) {
  set_has_mapname();
  if (mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapname_ = new ::std::string;
  }
  mapname_->assign(value);
  // @@protoc_insertion_point(field_set_char:MapTaskInfo.mapName)
}
inline void MapTaskInfo::set_mapname(const char* value, size_t size) {
  set_has_mapname();
  if (mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapname_ = new ::std::string;
  }
  mapname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MapTaskInfo.mapName)
}
inline ::std::string* MapTaskInfo::mutable_mapname() {
  set_has_mapname();
  if (mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MapTaskInfo.mapName)
  return mapname_;
}
inline ::std::string* MapTaskInfo::release_mapname() {
  clear_has_mapname();
  if (mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mapname_;
    mapname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MapTaskInfo::set_allocated_mapname(::std::string* mapname) {
  if (mapname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mapname_;
  }
  if (mapname) {
    set_has_mapname();
    mapname_ = mapname;
  } else {
    clear_has_mapname();
    mapname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MapTaskInfo.mapName)
}

// repeated int32 inputBlocks = 5;
inline int MapTaskInfo::inputblocks_size() const {
  return inputblocks_.size();
}
inline void MapTaskInfo::clear_inputblocks() {
  inputblocks_.Clear();
}
inline ::google::protobuf::int32 MapTaskInfo::inputblocks(int index) const {
  // @@protoc_insertion_point(field_get:MapTaskInfo.inputBlocks)
  return inputblocks_.Get(index);
}
inline void MapTaskInfo::set_inputblocks(int index, ::google::protobuf::int32 value) {
  inputblocks_.Set(index, value);
  // @@protoc_insertion_point(field_set:MapTaskInfo.inputBlocks)
}
inline void MapTaskInfo::add_inputblocks(::google::protobuf::int32 value) {
  inputblocks_.Add(value);
  // @@protoc_insertion_point(field_add:MapTaskInfo.inputBlocks)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MapTaskInfo::inputblocks() const {
  // @@protoc_insertion_point(field_list:MapTaskInfo.inputBlocks)
  return inputblocks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MapTaskInfo::mutable_inputblocks() {
  // @@protoc_insertion_point(field_mutable_list:MapTaskInfo.inputBlocks)
  return &inputblocks_;
}

// -------------------------------------------------------------------

// ReducerTaskInfo

// optional int32 jobId = 1;
inline bool ReducerTaskInfo::has_jobid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReducerTaskInfo::set_has_jobid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReducerTaskInfo::clear_has_jobid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReducerTaskInfo::clear_jobid() {
  jobid_ = 0;
  clear_has_jobid();
}
inline ::google::protobuf::int32 ReducerTaskInfo::jobid() const {
  // @@protoc_insertion_point(field_get:ReducerTaskInfo.jobId)
  return jobid_;
}
inline void ReducerTaskInfo::set_jobid(::google::protobuf::int32 value) {
  set_has_jobid();
  jobid_ = value;
  // @@protoc_insertion_point(field_set:ReducerTaskInfo.jobId)
}

// optional int32 taskId = 2;
inline bool ReducerTaskInfo::has_taskid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReducerTaskInfo::set_has_taskid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReducerTaskInfo::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReducerTaskInfo::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 ReducerTaskInfo::taskid() const {
  // @@protoc_insertion_point(field_get:ReducerTaskInfo.taskId)
  return taskid_;
}
inline void ReducerTaskInfo::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:ReducerTaskInfo.taskId)
}

// optional string reducerName = 3;
inline bool ReducerTaskInfo::has_reducername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReducerTaskInfo::set_has_reducername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReducerTaskInfo::clear_has_reducername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReducerTaskInfo::clear_reducername() {
  if (reducername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reducername_->clear();
  }
  clear_has_reducername();
}
inline const ::std::string& ReducerTaskInfo::reducername() const {
  // @@protoc_insertion_point(field_get:ReducerTaskInfo.reducerName)
  return *reducername_;
}
inline void ReducerTaskInfo::set_reducername(const ::std::string& value) {
  set_has_reducername();
  if (reducername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reducername_ = new ::std::string;
  }
  reducername_->assign(value);
  // @@protoc_insertion_point(field_set:ReducerTaskInfo.reducerName)
}
inline void ReducerTaskInfo::set_reducername(const char* value) {
  set_has_reducername();
  if (reducername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reducername_ = new ::std::string;
  }
  reducername_->assign(value);
  // @@protoc_insertion_point(field_set_char:ReducerTaskInfo.reducerName)
}
inline void ReducerTaskInfo::set_reducername(const char* value, size_t size) {
  set_has_reducername();
  if (reducername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reducername_ = new ::std::string;
  }
  reducername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ReducerTaskInfo.reducerName)
}
inline ::std::string* ReducerTaskInfo::mutable_reducername() {
  set_has_reducername();
  if (reducername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reducername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ReducerTaskInfo.reducerName)
  return reducername_;
}
inline ::std::string* ReducerTaskInfo::release_reducername() {
  clear_has_reducername();
  if (reducername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = reducername_;
    reducername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReducerTaskInfo::set_allocated_reducername(::std::string* reducername) {
  if (reducername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reducername_;
  }
  if (reducername) {
    set_has_reducername();
    reducername_ = reducername;
  } else {
    clear_has_reducername();
    reducername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ReducerTaskInfo.reducerName)
}

// optional int32 reducerNumber = 4;
inline bool ReducerTaskInfo::has_reducernumber() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReducerTaskInfo::set_has_reducernumber() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReducerTaskInfo::clear_has_reducernumber() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReducerTaskInfo::clear_reducernumber() {
  reducernumber_ = 0;
  clear_has_reducernumber();
}
inline ::google::protobuf::int32 ReducerTaskInfo::reducernumber() const {
  // @@protoc_insertion_point(field_get:ReducerTaskInfo.reducerNumber)
  return reducernumber_;
}
inline void ReducerTaskInfo::set_reducernumber(::google::protobuf::int32 value) {
  set_has_reducernumber();
  reducernumber_ = value;
  // @@protoc_insertion_point(field_set:ReducerTaskInfo.reducerNumber)
}

// optional string ownIp = 5;
inline bool ReducerTaskInfo::has_ownip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReducerTaskInfo::set_has_ownip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReducerTaskInfo::clear_has_ownip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReducerTaskInfo::clear_ownip() {
  if (ownip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ownip_->clear();
  }
  clear_has_ownip();
}
inline const ::std::string& ReducerTaskInfo::ownip() const {
  // @@protoc_insertion_point(field_get:ReducerTaskInfo.ownIp)
  return *ownip_;
}
inline void ReducerTaskInfo::set_ownip(const ::std::string& value) {
  set_has_ownip();
  if (ownip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ownip_ = new ::std::string;
  }
  ownip_->assign(value);
  // @@protoc_insertion_point(field_set:ReducerTaskInfo.ownIp)
}
inline void ReducerTaskInfo::set_ownip(const char* value) {
  set_has_ownip();
  if (ownip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ownip_ = new ::std::string;
  }
  ownip_->assign(value);
  // @@protoc_insertion_point(field_set_char:ReducerTaskInfo.ownIp)
}
inline void ReducerTaskInfo::set_ownip(const char* value, size_t size) {
  set_has_ownip();
  if (ownip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ownip_ = new ::std::string;
  }
  ownip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ReducerTaskInfo.ownIp)
}
inline ::std::string* ReducerTaskInfo::mutable_ownip() {
  set_has_ownip();
  if (ownip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ownip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ReducerTaskInfo.ownIp)
  return ownip_;
}
inline ::std::string* ReducerTaskInfo::release_ownip() {
  clear_has_ownip();
  if (ownip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ownip_;
    ownip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReducerTaskInfo::set_allocated_ownip(::std::string* ownip) {
  if (ownip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ownip_;
  }
  if (ownip) {
    set_has_ownip();
    ownip_ = ownip;
  } else {
    clear_has_ownip();
    ownip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ReducerTaskInfo.ownIp)
}

// repeated string mapOutputLocation = 6;
inline int ReducerTaskInfo::mapoutputlocation_size() const {
  return mapoutputlocation_.size();
}
inline void ReducerTaskInfo::clear_mapoutputlocation() {
  mapoutputlocation_.Clear();
}
inline const ::std::string& ReducerTaskInfo::mapoutputlocation(int index) const {
  // @@protoc_insertion_point(field_get:ReducerTaskInfo.mapOutputLocation)
  return mapoutputlocation_.Get(index);
}
inline ::std::string* ReducerTaskInfo::mutable_mapoutputlocation(int index) {
  // @@protoc_insertion_point(field_mutable:ReducerTaskInfo.mapOutputLocation)
  return mapoutputlocation_.Mutable(index);
}
inline void ReducerTaskInfo::set_mapoutputlocation(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ReducerTaskInfo.mapOutputLocation)
  mapoutputlocation_.Mutable(index)->assign(value);
}
inline void ReducerTaskInfo::set_mapoutputlocation(int index, const char* value) {
  mapoutputlocation_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ReducerTaskInfo.mapOutputLocation)
}
inline void ReducerTaskInfo::set_mapoutputlocation(int index, const char* value, size_t size) {
  mapoutputlocation_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ReducerTaskInfo.mapOutputLocation)
}
inline ::std::string* ReducerTaskInfo::add_mapoutputlocation() {
  return mapoutputlocation_.Add();
}
inline void ReducerTaskInfo::add_mapoutputlocation(const ::std::string& value) {
  mapoutputlocation_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ReducerTaskInfo.mapOutputLocation)
}
inline void ReducerTaskInfo::add_mapoutputlocation(const char* value) {
  mapoutputlocation_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ReducerTaskInfo.mapOutputLocation)
}
inline void ReducerTaskInfo::add_mapoutputlocation(const char* value, size_t size) {
  mapoutputlocation_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ReducerTaskInfo.mapOutputLocation)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ReducerTaskInfo::mapoutputlocation() const {
  // @@protoc_insertion_point(field_list:ReducerTaskInfo.mapOutputLocation)
  return mapoutputlocation_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ReducerTaskInfo::mutable_mapoutputlocation() {
  // @@protoc_insertion_point(field_mutable_list:ReducerTaskInfo.mapOutputLocation)
  return &mapoutputlocation_;
}

// optional string outputFile = 7;
inline bool ReducerTaskInfo::has_outputfile() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ReducerTaskInfo::set_has_outputfile() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ReducerTaskInfo::clear_has_outputfile() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ReducerTaskInfo::clear_outputfile() {
  if (outputfile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    outputfile_->clear();
  }
  clear_has_outputfile();
}
inline const ::std::string& ReducerTaskInfo::outputfile() const {
  // @@protoc_insertion_point(field_get:ReducerTaskInfo.outputFile)
  return *outputfile_;
}
inline void ReducerTaskInfo::set_outputfile(const ::std::string& value) {
  set_has_outputfile();
  if (outputfile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    outputfile_ = new ::std::string;
  }
  outputfile_->assign(value);
  // @@protoc_insertion_point(field_set:ReducerTaskInfo.outputFile)
}
inline void ReducerTaskInfo::set_outputfile(const char* value) {
  set_has_outputfile();
  if (outputfile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    outputfile_ = new ::std::string;
  }
  outputfile_->assign(value);
  // @@protoc_insertion_point(field_set_char:ReducerTaskInfo.outputFile)
}
inline void ReducerTaskInfo::set_outputfile(const char* value, size_t size) {
  set_has_outputfile();
  if (outputfile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    outputfile_ = new ::std::string;
  }
  outputfile_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ReducerTaskInfo.outputFile)
}
inline ::std::string* ReducerTaskInfo::mutable_outputfile() {
  set_has_outputfile();
  if (outputfile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    outputfile_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ReducerTaskInfo.outputFile)
  return outputfile_;
}
inline ::std::string* ReducerTaskInfo::release_outputfile() {
  clear_has_outputfile();
  if (outputfile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = outputfile_;
    outputfile_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReducerTaskInfo::set_allocated_outputfile(::std::string* outputfile) {
  if (outputfile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete outputfile_;
  }
  if (outputfile) {
    set_has_outputfile();
    outputfile_ = outputfile;
  } else {
    clear_has_outputfile();
    outputfile_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ReducerTaskInfo.outputFile)
}

// -------------------------------------------------------------------

// ReducerInputFileRequest

// optional string filename = 1;
inline bool ReducerInputFileRequest::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReducerInputFileRequest::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReducerInputFileRequest::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReducerInputFileRequest::clear_filename() {
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_->clear();
  }
  clear_has_filename();
}
inline const ::std::string& ReducerInputFileRequest::filename() const {
  // @@protoc_insertion_point(field_get:ReducerInputFileRequest.filename)
  return *filename_;
}
inline void ReducerInputFileRequest::set_filename(const ::std::string& value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set:ReducerInputFileRequest.filename)
}
inline void ReducerInputFileRequest::set_filename(const char* value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set_char:ReducerInputFileRequest.filename)
}
inline void ReducerInputFileRequest::set_filename(const char* value, size_t size) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ReducerInputFileRequest.filename)
}
inline ::std::string* ReducerInputFileRequest::mutable_filename() {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ReducerInputFileRequest.filename)
  return filename_;
}
inline ::std::string* ReducerInputFileRequest::release_filename() {
  clear_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = filename_;
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReducerInputFileRequest::set_allocated_filename(::std::string* filename) {
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filename_;
  }
  if (filename) {
    set_has_filename();
    filename_ = filename;
  } else {
    clear_has_filename();
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ReducerInputFileRequest.filename)
}

// -------------------------------------------------------------------

// ReducerInputFileResponse

// repeated string fileline = 1;
inline int ReducerInputFileResponse::fileline_size() const {
  return fileline_.size();
}
inline void ReducerInputFileResponse::clear_fileline() {
  fileline_.Clear();
}
inline const ::std::string& ReducerInputFileResponse::fileline(int index) const {
  // @@protoc_insertion_point(field_get:ReducerInputFileResponse.fileline)
  return fileline_.Get(index);
}
inline ::std::string* ReducerInputFileResponse::mutable_fileline(int index) {
  // @@protoc_insertion_point(field_mutable:ReducerInputFileResponse.fileline)
  return fileline_.Mutable(index);
}
inline void ReducerInputFileResponse::set_fileline(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ReducerInputFileResponse.fileline)
  fileline_.Mutable(index)->assign(value);
}
inline void ReducerInputFileResponse::set_fileline(int index, const char* value) {
  fileline_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ReducerInputFileResponse.fileline)
}
inline void ReducerInputFileResponse::set_fileline(int index, const char* value, size_t size) {
  fileline_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ReducerInputFileResponse.fileline)
}
inline ::std::string* ReducerInputFileResponse::add_fileline() {
  return fileline_.Add();
}
inline void ReducerInputFileResponse::add_fileline(const ::std::string& value) {
  fileline_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ReducerInputFileResponse.fileline)
}
inline void ReducerInputFileResponse::add_fileline(const char* value) {
  fileline_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ReducerInputFileResponse.fileline)
}
inline void ReducerInputFileResponse::add_fileline(const char* value, size_t size) {
  fileline_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ReducerInputFileResponse.fileline)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ReducerInputFileResponse::fileline() const {
  // @@protoc_insertion_point(field_list:ReducerInputFileResponse.fileline)
  return fileline_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ReducerInputFileResponse::mutable_fileline() {
  // @@protoc_insertion_point(field_mutable_list:ReducerInputFileResponse.fileline)
  return &fileline_;
}

// -------------------------------------------------------------------

// HeartBeatResponse

// optional int32 status = 1;
inline bool HeartBeatResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartBeatResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartBeatResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartBeatResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 HeartBeatResponse::status() const {
  // @@protoc_insertion_point(field_get:HeartBeatResponse.status)
  return status_;
}
inline void HeartBeatResponse::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:HeartBeatResponse.status)
}

// repeated .MapTaskInfo mapTasks = 2;
inline int HeartBeatResponse::maptasks_size() const {
  return maptasks_.size();
}
inline void HeartBeatResponse::clear_maptasks() {
  maptasks_.Clear();
}
inline const ::MapTaskInfo& HeartBeatResponse::maptasks(int index) const {
  // @@protoc_insertion_point(field_get:HeartBeatResponse.mapTasks)
  return maptasks_.Get(index);
}
inline ::MapTaskInfo* HeartBeatResponse::mutable_maptasks(int index) {
  // @@protoc_insertion_point(field_mutable:HeartBeatResponse.mapTasks)
  return maptasks_.Mutable(index);
}
inline ::MapTaskInfo* HeartBeatResponse::add_maptasks() {
  // @@protoc_insertion_point(field_add:HeartBeatResponse.mapTasks)
  return maptasks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MapTaskInfo >&
HeartBeatResponse::maptasks() const {
  // @@protoc_insertion_point(field_list:HeartBeatResponse.mapTasks)
  return maptasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::MapTaskInfo >*
HeartBeatResponse::mutable_maptasks() {
  // @@protoc_insertion_point(field_mutable_list:HeartBeatResponse.mapTasks)
  return &maptasks_;
}

// repeated .ReducerTaskInfo reduceTasks = 3;
inline int HeartBeatResponse::reducetasks_size() const {
  return reducetasks_.size();
}
inline void HeartBeatResponse::clear_reducetasks() {
  reducetasks_.Clear();
}
inline const ::ReducerTaskInfo& HeartBeatResponse::reducetasks(int index) const {
  // @@protoc_insertion_point(field_get:HeartBeatResponse.reduceTasks)
  return reducetasks_.Get(index);
}
inline ::ReducerTaskInfo* HeartBeatResponse::mutable_reducetasks(int index) {
  // @@protoc_insertion_point(field_mutable:HeartBeatResponse.reduceTasks)
  return reducetasks_.Mutable(index);
}
inline ::ReducerTaskInfo* HeartBeatResponse::add_reducetasks() {
  // @@protoc_insertion_point(field_add:HeartBeatResponse.reduceTasks)
  return reducetasks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ReducerTaskInfo >&
HeartBeatResponse::reducetasks() const {
  // @@protoc_insertion_point(field_list:HeartBeatResponse.reduceTasks)
  return reducetasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::ReducerTaskInfo >*
HeartBeatResponse::mutable_reducetasks() {
  // @@protoc_insertion_point(field_mutable_list:HeartBeatResponse.reduceTasks)
  return &reducetasks_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MapReduce_2eproto__INCLUDED
